#exposeVariableEntitySpecific()
#exposeEnvironmentParams()
#putImportParamsUML()
<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-lazy="false">
	<class name="$importDomainObjectUML" 
	       table="${table.name}"
	       lazy="true">
		<!--<cache usage="read-write" />-->

#if($hasPrimaryKey)
	<id name="$primaryKeyVariable" column="$pK" type="$primaryKeyFullType">            
#if (!$isPkUserProvided)
#if ($isPrimaryKeyPolicySequence)
    <generator class="sequence">
##        <param name="sequence">hibernate_sequence</param>
       <param name="sequence">$PKSequence</param>
    </generator>
#elseif ($isPrimaryKeyPolicyIdentity)
    <generator class="identity">
#end
#end                
	</id>
#end

	<!-- map the fields of ${className} domain object  -->
#foreach ($column in ${table.noPrimaryKeyNoForeignKeyColumns})
#putColumnParams()
	<property name="$columnVar" column="$column.name" #if($column.isRequired())not-null="true"#else not-null="false"#end #if($isColumnUnique)unique="true"#else unique="false"#end/> #end

#foreach ($reference in $table.parents)
#putReferenceParams2()
#set ($isLocalColumnPK = $tableUtils.isColumnPk($reference.localColumn, $table))
#exposeImportParamsUML($reference.foreignTable)
<!-- readonly links -->
	<property name="$localColumnVariable" column="${reference.localColumnName}" #if($columnDB.isRequired())not-null="true"#else not-null="false"#end #if($isLocalColumnPK)insert="false" update="false"#end />

	<many-to-one name="${linkedTableVariable}${localColumnClass}" 
	 class="$importDomainObjectUML" 
	 column="$reference.localColumnName" 
	 insert="false" update="false"
	 />	
#end

#foreach ($reference in $table.children)
#putReferenceParams2()
#exposeImportParamsUML($reference.foreignTable)      <set name="${linkedTableVariable}${linkedColumnClass}s" table="$reference.foreignTableName" lazy="true">
        <key column="$reference.foreignColumnName" #if($columnDB.isRequired())not-null="true"#else not-null="false"#end/>
        <one-to-many class="$importDomainObjectUML"/>
    </set>		    
#end  

	</class>	</hibernate-mapping>
