#exposeVariableEntitySpecific()
#addedAreas()
#set($namespacePackage = "/my/hw/view/common/")
#set($javaPackage = "my.hw.view.common")
<xsd:schema xmlns:sdoJava="commonj.sdo/java" xmlns:ns0="http://xmlns.oracle.com/adf/svc/types/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
     xmlns:sdoXML="commonj.sdo/xml" targetNamespace="$namespacePackage" xmlns="$namespacePackage"
     elementFormDefault="qualified" sdoJava:package="$javaPackage">
    <xsd:import schemaLocation="classpath:/META-INF/wsdl/BC4JService.xsd" namespace="http://xmlns.oracle.com/adf/svc/types/"/>
    <xsd:import schemaLocation="classpath:/xml/sdoJava.xsd" namespace="commonj.sdo/java"/>
    <xsd:import schemaLocation="classpath:/xml/sdoXML.xsd" namespace="commonj.sdo/xml"/>
#foreach ($reference in $table.children)
#putReferenceParams2()
#exposeADFEntityConfig()
    <xsd:include schemaLocation="${ViewSDOXsdClassName}"/>
#end
    <xsd:complexType name="${className}">
        <xsd:annotation>
            <xsd:appinfo source="http://xmlns.oracle.com/adf/svc/metadata/">
                <key xmlns="http://xmlns.oracle.com/adf/svc/metadata/">
#foreach ($column in $table.primaryKeys)
#putColumnParamNaming()
                    <attribute>$columnClass</attribute>
#end
                </key>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
#foreach ($column in $table.primaryKeys)
#putColumnParamNaming()
#set($sdoType="xsd:long")
#set($hasSdoDataType=false)
#set($sdoXmlDataType="sdoJava:LongObject")
                    <attribute>$columnClass</attribute>
            <xsd:element name="${columnClass}" type="xsd:long" minOccurs="0" sdoXML:dataType="sdoJava:LongObject"/>
#end
            <xsd:element name="PersonId" type="xsd:long" minOccurs="0" sdoXML:dataType="sdoJava:LongObject"/>
            <xsd:element name="PrincipalName" type="xsd:string" minOccurs="0"/>

            <xsd:element name="OrdersView" type="OrdersViewSDO" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="$classVariable" type="$className"/>
</xsd:schema>
