#exposeVariableModelSpecific()
#exposeSDOSpecific()
<wsdl:definitions
     name="AppModuleService"
     targetNamespace="${namespacePackage}"
     xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
     xmlns:errors="http://xmlns.oracle.com/adf/svc/errors/"
     xmlns:orafault="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0"
     xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
     xmlns:tns="$namespacePackage"
     xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
     xmlns:types="$namespaceTypesPackage"
    >
    <plnk:partnerLinkType name="AppModuleService">
        <plnk:role name="AppModuleServiceProvider">
            <plnk:portType name="tns:AppModuleService"/>
        </plnk:role>
        <plnk:role name="AppModuleServiceRequestor">
            <plnk:portType name="tns:AppModuleServiceResponse"/>
        </plnk:role>
    </plnk:partnerLinkType>
    <wsdl:import namespace="http://xmlns.oracle.com/adf/svc/errors/" location="classpath:/META-INF/wsdl/ServiceException.wsdl"/>
    <wsdl:types>
        <schema xmlns="http://www.w3.org/2001/XMLSchema">
            <import namespace="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0" schemaLocation="classpath:/META-INF/oracle-webservices-async-fault-11_0.xsd"/>
            <import namespace="${namespaceTypesPackage}" schemaLocation="${appModuleADFSDOServiceXsdClass}.xsd"/>
        </schema>
    </wsdl:types>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
    <wsdl:message name="AppModuleService_onFault">
        <wsdl:part name="parameters" element="orafault:Fault"/>
    </wsdl:message>
#if($isAsync)
    <wsdl:message name="AppModuleService_delete${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:delete${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_merge${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:merge${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_find${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:find${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_get${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:get${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_processCS${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:processCS${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_process${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:process${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_update${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:update${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_create${domainClassName}View1AsyncResponse">
        <wsdl:part name="parameters" element="types:create${domainClassName}View1AsyncResponse"/>
    </wsdl:message>
#end
    <wsdl:message name="AppModuleService_get${domainClassName}View1">
        <wsdl:part name="parameters" element="types:get${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_get${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:get${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_update${domainClassName}View1">
        <wsdl:part name="parameters" element="types:update${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_update${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:update${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_delete${domainClassName}View1">
        <wsdl:part name="parameters" element="types:delete${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_delete${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:delete${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_merge${domainClassName}View1">
        <wsdl:part name="parameters" element="types:merge${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_merge${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:merge${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_find${domainClassName}View1">
        <wsdl:part name="parameters" element="types:find${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_find${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:find${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_process${domainClassName}View1">
        <wsdl:part name="parameters" element="types:process${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_process${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:process${domainClassName}View1Response"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_processCS${domainClassName}View1">
        <wsdl:part name="parameters" element="types:processCS${domainClassName}View1"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_processCS${domainClassName}View1Response">
        <wsdl:part name="parameters" element="types:processCS${domainClassName}View1Response"/>
    </wsdl:message>
#if($isAsync)
    <wsdl:message name="AppModuleService_delete${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:delete${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_merge${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:merge${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_find${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:find${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_get${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:get${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_processCS${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:processCS${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_process${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:process${domainClassName}View1Async"/>
    </wsdl:message>
    <wsdl:message name="AppModuleService_update${domainClassName}View1Async">
        <wsdl:part name="parameters" element="types:update${domainClassName}View1Async"/>
    </wsdl:message>
#end
#end
    <wsdl:portType name="AppModuleServiceResponse">
        <wsdl:operation name="onFault">
            <wsdl:input message="tns:AppModuleService_onFault" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault"/>
        </wsdl:operation>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
#if($isAsync)
        <wsdl:operation name="delete${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_delete${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}delete${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_merge${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}merge${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_find${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}find${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="get${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_get${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}get${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_processCS${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}processCS${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_process${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}process${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1AsyncResponse">
            <wsdl:input message="tns:AppModuleService_update${domainClassName}View1AsyncResponse" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}update${domainClassName}View1AsyncResponse"/>
        </wsdl:operation>
#end
#end
    </wsdl:portType>
    <wsdl:portType name="AppModuleService">
        <wsdl:documentation>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
            <ViewInstance xmlns="http://xmlns.oracle.com/adf/svc/metadata/" Name="${domainClassName}View1" SDOName="tns:${domainClassName}ViewSDO"
                 UpdateOpName="update${domainClassName}View1" DeleteOpName="delete${domainClassName}View1" MergeOpName="merge${domainClassName}View1"
                 GetOpName="get${domainClassName}View1" FindOpName="find${domainClassName}View1" ProcessOpName="process${domainClassName}View1"
                 ProcessCSOpName="processCS${domainClassName}View1"/>
#end
        </wsdl:documentation>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
        <wsdl:operation name="get${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_get${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_get${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="create${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_create${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_create${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_update${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_update${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="delete${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_delete${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_delete${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_merge${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_merge${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_find${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_find${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_process${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_process${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1">
            <wsdl:input message="tns:AppModuleService_processCS${domainClassName}View1"/>
            <wsdl:output message="tns:AppModuleService_processCS${domainClassName}View1Response"/>
            <wsdl:fault name="ServiceException" message="errors:ServiceException"/>
        </wsdl:operation>
#if($isAsync)
        <wsdl:operation name="delete${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_delete${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}delete${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_merge${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}merge${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_find${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}find${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="get${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_get${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}get${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_processCS${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}processCS${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_process${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}process${domainClassName}View1Async"/>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1Async">
            <wsdl:input message="tns:AppModuleService_update${domainClassName}View1Async" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"
                 ns1:Action="${namespacePackage}update${domainClassName}View1Async"/>
        </wsdl:operation>
#end
#end
    </wsdl:portType>
    <wsdl:binding name="AppModuleServiceSoapHttp" type="tns:AppModuleService">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
        <wsdl:operation name="get${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}get${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="create${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}create${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}update${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="delete${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}delete${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}merge${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}find${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}process${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1">
            <soap:operation soapAction="${namespacePackage}processCS${domainClassName}View1"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
#if($isAsync)
        <wsdl:operation name="delete${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}delete${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}merge${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}find${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="get${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}get${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}processCS${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}process${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1Async">
            <soap:operation soapAction="${namespacePackage}update${domainClassName}View1Async"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
#end
#end
    </wsdl:binding>
    <wsdl:binding name="AppModuleServiceResponseBinding" type="tns:AppModuleServiceResponse">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="onFault">
            <soap:operation soapAction="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
#foreach($table in $entities)
#exposeADFSDOEntitySpecific()
#if($isAsync)
        <wsdl:operation name="delete${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}delete${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="merge${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}merge${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="find${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}find${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="get${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}get${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="processCS${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}processCS${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="process${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}process${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="update${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}update${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="create${domainClassName}View1AsyncResponse">
            <soap:operation soapAction="${namespacePackage}create${domainClassName}View1AsyncResponse"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
        </wsdl:operation>
#end
#end
    </wsdl:binding>
    <wsdl:service name="AppModuleService">
        <wsdl:port name="AppModuleServiceSoapHttpPort" binding="tns:AppModuleServiceSoapHttp">
            <soap:address location="http://localhost:7101/m-ViewController-context-root/AppModuleService"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
