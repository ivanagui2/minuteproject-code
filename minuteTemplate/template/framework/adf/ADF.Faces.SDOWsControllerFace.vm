#exposeADFFacesModelSpecific()
#set($thisClassName=$className)
package $packageName;

import eu.adf.fwk.query.QueryRequest;
import eu.adf.fwk.query.QueryResponse;

#foreach($table in $entities)
#exposeADFFacesEntitySpecific()
#exposeADFFacesDataControlEntitySpecific()
#if(!$isMany2Many)
import $beanVOADFFacesImport;
import $beanVOADFFacesQueryResponseImport;
import $beanVOADFFacesQueryRequestImport;
#end
#end

#foreach ($query in $model.getStatementModel().getQueries().getQueries())
#exposeADFQuerySpecific()
#putImportQuerySDDBean()
import $sddOutputBeanCollectionImport;
#if($isNotVoidInput)
import $sddInputBeanImport;
#end
#end

import java.util.List;

public interface $thisClassName {

#foreach($table in $entities)
#exposeADFFacesEntitySpecific()
#exposeADFFacesDataControlEntitySpecific()
#if(!$isMany2Many)
##if ($hasSearch)
#set($beanVOADFFacesVariable = $formatUtils.getJavaNameVariableConvertReservedWord($beanVOADFFacesVariable))
  /**
   * @return $beanVOADFFacesQueryResponseClass
   */
  public $beanVOADFFacesQueryResponseClass list$domainClassName($beanVOADFFacesQueryRequestClass request);
##end
  /**
   * @return $beanVOADFFacesClass
   */
   public $beanVOADFFacesClass get$domainClassName ($beanVOADFFacesClass $beanVOADFFacesVariable);
  
   public $beanVOADFFacesClass createOrUpdate$domainClassName ($beanVOADFFacesClass $beanVOADFFacesVariable);
  
   public void delete$domainClassName ($beanVOADFFacesClass $beanVOADFFacesVariable);

#if ($tableUtils.isAdminContentType($table))
    public List<$beanVOADFFacesClass> get${beanVOADFFacesClass}DropDownList() ;
		
#end
#end
#end

#foreach ($query in $model.getStatementModel().getQueries().getQueries())
#exposeADFQuerySpecific()
#putImportQuerySDDBean()
    public $sddOutputBeanCollectionClass execute (#if($isNotVoidInput)$sddInputBeanClass $sddInputBeanVariable#end) ;

    public $sddOutputBeanClass get${sddOutputBeanClass}Detail ($sddOutputBeanClass $sddOutputBeanVariable) ;

#end
}
