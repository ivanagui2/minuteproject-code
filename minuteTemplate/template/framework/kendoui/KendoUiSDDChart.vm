#exposeSeparator()
#putImportQuerySDDBean()
#putImportSDDInputBean()
#exposeQuerySpecific()
#exposeChartSpecific()
#set($table=$inputBean)
#asUML($table)
#set ($inputClass = $commonUtils.getTemplateClassName($inputBean, $model, $templateSDDInputBean))
#set ($tableVariableName = $commonUtils.getJavaNameVariableFirstLetter($inputClass))
#set($tableDB = $inputBean)
#exposeVariableEntitySpecific()
#addedAreas()
<!DOCTYPE html>
<html>
<head>
<title></title>

#putKendoUIJSImport()

</head>

<body>
    
<div id="${tableVariableName}">
   <div class="demo-section k-header">
   		<div id="form-${tableVariableName}" >
        	<h3>${tableVariableName}</h3>
<div style="display: table; width: 100%; margin-top: 10px;">
#*            
#foreach($column in $inputBean.columns)
#putColumnParams()
#columnJavaNaming()
#putKendoHtmlColumnSnippet($tableVariableName $tableVariableName)
#end
*#
<!-- pk -->
#foreach($column in ${table.primaryKeyColumns})
#putColumnParams()
#columnJavaNaming()
#if (!$isMany2Many && $isPkUserProvided)
#putKendoHtmlColumnSnippet($tableVariableName $tableVariableName)
#end
#end
<!-- column group -->
#foreach ($columnGroup in $tableUtils.extractFieldGroup(${table.attributes}, $table))
#foreach ($column in $columnGroup)
#putColumnParams()
#columnJavaNaming()
#putKendoHtmlColumnSnippet($tableVariableName $tableVariableName)
#end
#end
<!-- reference -->
#foreach ($reference in $tableUtils.getParentOrderByReferenceData($table))
#putReferenceParams2()
#set ($column=$localColumn)
#putColumnParams()
#columnJavaNaming()
#putKendoHtmlColumnSnippet($tableVariableName $tableVariableName)
#end
</div>

            <!-- button action -->
            <p>
                <button id="action" class="k-button" data-bind="click: searchSdd">Execute</button>
            </p>
        </div>
    </div>
</div>

<div id="ssd-output-grid"/>
<div id="ssd-output-chart"/>

<div id="details" />

<!-- kendo js scripts -->
<script>
    $(document).ready(function () {

	  //fields
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#putColumnParams()
#columnJavaNaming()
#putKendoJsColumnSnippet($tableVariableName $tableVariableName)
#end
#end

## inspired by http://demos.telerik.com/kendo-ui/grid/custom-command
        wnd = $("#details").kendoWindow({
           title: "$className Details",
           modal: true,
           visible: false,
           resizable: false,
           width: 300
        }).data("kendoWindow");

        detailsTemplate = kendo.template($("#template-detail").html());

        var viewModel = kendo.observable({

            searchSdd: function () {
                isQuestionMarkDone = false;
        		var query = "";
#set($cpt=0)
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#set($cpt=$cpt+1)
#putColumnParamNaming()
        		var $columnVar = this.get("$columnVar");
#if($columnUtils.isTime($column))
                ${columnVar}Date = new Date(${columnVar});
				${columnVar}DateSt = kendo.toString(${columnVar}Date, "yyyy-MM-dd");
#set($columnValue="${columnVar}DateSt")
#else
#set($columnValue=$columnVar)
#end
##        		query = query + "$columnVar="+$columnValue;
                if ($columnVar!=undefined && !$columnVar=='') {
                    if (!isQuestionMarkDone) {
                        isQuestionMarkDone = true;
                        query = "?"+"$columnVar="+$columnValue;
                    } else {
                        query = query+"&"+"$columnVar="+$columnValue;
                    }
                }
#end
#end
				var dataSourceUrl = "/data/sdd/${tableClassName}In"+query;

                $("#ssd-output-chart").kendoChart({
                    dataSource: {
                        transport: {
                            read: {
                                url: dataSourceUrl,
                                dataType: "json",
                                contentType: "application/json; charset=utf-8",
                                cache: false
                            }
                        }
                        ,
                        schema: {
                            data: "$sddOutputBeanClass"
                        }
                    },
					title : {
						text: "to fill"
					},
                	legend: {
                    	position: "top"
                	},
                	seriesDefaults: {
                    	type: "column"
                	},
                	series:
                	[
#foreach($column in $dimensions)
#putColumnParamNaming()
#set($dimVar = "${columnVar}$velocityCount")
						{
                    		field: "${columnVar}",
                    		name: "${columnVar}"
						}#if ($velocityCount < $dimensions.size()) , #end

#end
                	],
                	categoryAxis: {
                    	field: "$outputBeanDimension1Var", 
                    	majorGridLines: {
                        	visible: false
                    	}
                	},
                	valueAxis: {
                    	labels: {
                        	format: "N0"
                    	},
                    	line: {
                        	visible: false
                    	}
                	},
                	tooltip: {
                    	visible: true,
                    	format: "N0"
                	},
					columns: [
#foreach($column in $outputBean.columns)
#putColumnParamNaming()
					{
	                	field: "$columnVar",
	                	title: "$columnVar",
#updatedColumnAttributeAreas()
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
//						width : toset,
#end
$!updatedAreaEnd
						hidden : false
	            	}
#if ($query.actions.size()>0 || $velocityCount!=$outputBean.columns.size())
                	,#end 
#end
#foreach ($action in $query.actions)
					{ command: { text: "$action.name", click: showDetails }, title: " ", width: "180px" }
#if ($velocityCount!=$query.actions.size())
                	,#end 
#end
	            	],
                    seriesClick: function(e) {
						showDetails (e);
                    },
                    height: 500,
                    scrollable: true,
                    selectable: true

                });

            }

        });

        kendo.bind($("#form-${tableVariableName}"), viewModel);

    });

#foreach ($action in $query.actions)
	function $action.name (e) {
		e.preventDefault();
#exposeEntityUpdatedAreas("${action.name}-action")
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
//		todo
#end
$!updatedAreaEnd
	}

#end
    function showDetails(e) {
       e.preventDefault();

       var dataItem = e.dataItem;
       wnd.content(detailsTemplate(dataItem));
       wnd.center().open();
   }

</script>

<script type="text/x-kendo-template" id="template-detail">
   <div id="details-container">
#foreach($column in $outputBean.columns)
#putColumnParamNaming()
       <h2>$columnVar : #= $columnVar # </h2>
#end
   </div>
</script>

</body>
</html>

#* 
 things to do

#set($table=$inputBean)
#asUML($table)
#exposeVariableEntitySpecific()
#foreach($column in ${table.primaryKeyColumns})
#putColumnParams()
#columnJavaNaming()
#if (!$isMany2Many && $isPkUserProvided)
#putJSFColumnSnippet2()
##$columnVar =  $column.alias
#end
#end
#foreach ($columnGroup in $tableUtils.extractFieldGroup(${table.attributes}, $table))
#foreach ($column in $columnGroup)
#putColumnParams()
#columnJavaNaming()
#putJSFColumnSnippet2()
#end
#end
#foreach ($reference in $table.parents)
#putReferenceParams2()
#set ($column=$localColumn)
#putColumnParams()
#columnJavaNaming()
#if($tableUtils.isAdminContentType($linktableDB))
#putJSFParentDropDownListSnippet()
#else
##TODO change childrenListClass is normally for children unique but not unique for parent lookup
#putJSFParentAffectationSnippet($velocityCount)
#end
#end
#foreach ($reference in $table.parents)
#putReferenceParams2()
#if(!$tableUtils.isAdminContentType($linktableDB))
#set ($entityListRowJSFLocation = $commonUtils.getArtifactRelativePathDirAndFullName($linktableDB, $template, $templateEntityListRowJSF))
#set ($entityLinkControllerJSFClass = $commonUtils.getTemplateClassName($linktableDB, $model, $templateEntityControllerJSF))
#set ($entityLinkControllerJSFVariable = $commonUtils.getJavaNameVariableFirstLetter($entityLinkControllerJSFClass))
#set ($childrenListClass = $childrenListClass+$velocityCount)
<p:outputPanel id="container${childrenListClass}" >
 <p:dialog id="suc${childrenListClass}Dialog" message="Can you select one item?" rendered="#{${entityControllerJSFVariable}.isRender${localColumnClass}()}"
		header="Affectation process" severity="alert" widgetVar="suc${childrenListClass}Dialog" appendToBody="true">
	<h:form id="suc${childrenListClass}Form">
    <p:dataTable value="#{${entityLinkControllerJSFVariable}.lazyModel}" 
        id="table$childrenListClass" 
        var="item" 
        paginator="true" rows="10" 
        lazy="true"
		selection="#{${entityLinkControllerJSFVariable}.selected${linkedTableClass}}" selectionMode="single"
        paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
        rowsPerPageTemplate="10,20,50"
		emptyMessage="No $linkedTableClass found with given criteria"> 

        <f:facet name="header">  
            List of #{i18n.${childrenListVariable}}  
        </f:facet>
        <ui:include src="/$entityListRowJSFLocation">
           <ui:param name="isSemanticReference" value="false" />
         </ui:include>
		 <p:column>
            <p:commandButton value="Affect" id="affectButton${linkedColumnClass}" update="#{affectFormId}:lbl${localColumnClass}-#{idValue}" actionListener="#{${entityControllerJSFVariable}.desactivateRender${localColumnClass}}" title="Affect" onclick="PF('suc${childrenListClass}Dialog').hide()" process="@this">
				<f:setPropertyActionListener value="#{item.${linkedColumnVariable}}" target="#{${entityControllerJSFVariable}.selected${tableClassName}.${localColumnVariable}_}" />
                <f:setPropertyActionListener value="#{item}" target="#{${entityControllerJSFVariable}.selected${tableClassName}.${localColumnVariable}}" />
            </p:commandButton >
		  </p:column>
    </p:dataTable>
   </h:form>
 </p:dialog>
</p:outputPanel>
#end
#end
*#

#* 

                <p:commandButton title="#{i18n.execute}" value="#{i18n.execute}" update="sddInputPanel,display"
                    action="#{${entityControllerJSFVariable}.execute}" />
                </h:panelGrid>
            </p:panel>
            <p:panel id="display" header="Information" style="margin-top:10px;">
            <p:dataTable var="${sddOutputBeanVariable}" value="#{${entityControllerJSFVariable}.getOutputList()}" paginator="true" rows="10"  
                        selection="#{${entityControllerJSFVariable}.selected${sddOutputBeanClass}}" 
                        selectionMode="single" rowKey="#{${sddOutputBeanVariable}}"
                        onRowSelectUpdate="display" 
                        dynamic="true"  resizableColumns="true"
                        paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                        rowsPerPageTemplate="5,10,15"> 
                <f:facet name="header">  
                    #{i18n.listOf} #{i18n.$sddOutputBeanVariable}  
                </f:facet>  
                <p:column style="width:16px">  
                    <p:rowToggler/>  
                </p:column>
#foreach($column in $outputBean.columns)
#putColumnParamNaming()
                <p:column sortBy="#{${sddOutputBeanVariable}.${columnVar}}" filterBy="#{${sddOutputBeanVariable}.${columnVar}}">  
                    <f:facet name="header">  
                        <h:outputText value="#{i18n.$sddOutputBeanVariable$separator$columnVar}" />  
                    </f:facet>  
                    <h:outputText value="#{${sddOutputBeanVariable}.${columnVar}}" />  
                </p:column>  
#end
                </p:dataTable>  
            </p:panel>
		</h:form>
	</ui:define>
</ui:composition>
</html>
*#