#exposeJSFEntitySpecific()
package $packageName;

import $importDomainObjectUML;
import $beanSpringModelServiceImport;
import org.primefaces.model.SortOrder;

import java.util.Map;

public class ${className} extends $genericLazyDataModel <$tableClassName, ${beanSpringModelServiceClass}> {

    @Override
    protected $tableClassName getSortMask(SortOrder sortOrder) {
		$tableClassName esMask = new $tableClassName();
		esMask.mask(sortField);
		return esMask;
    }

    @Override
    protected $tableClassName getFilterMask(Map<String, String> filters) {
        $tableClassName ecMask = new $tableClassName();
        ecMask.maskString(filters);
		return ecMask;
    }

    @Override
    protected Object getRowKeyImplementation($tableClassName element) {
#if($columnUtils.isPartOfCompositePrimaryKey($primaryKeyFirstColumn))
#set($primaryKeyVariable = $formatUtils.firstUpperCase($primaryKeyVariable))
        // not fully supported! cannot transform row in composite pk
		return element.get${primaryKeyVariable}_();
#else
#if(!$columnUtils.isString($primaryKeyFirstColumn))
        if (element.get$primaryKeyJavaNameClass()==null)
           return null;
        return element.get$primaryKeyJavaNameClass().toString();
#else
        return element.get$primaryKeyJavaNameClass();
#end
#end
    }

    @Override
    protected $tableClassName serviceLoad(String rowKey) {
##if($columnUtils.isForeignKey($primaryKeyFirstColumn) || $columnUtils.isPartOfCompositePrimaryKey($primaryKeyFirstColumn))
#if($columnUtils.isPartOfCompositePrimaryKey($primaryKeyFirstColumn))
        // not fully supported! cannot transform row in composite pk
        return new $tableClassName();
#else
	   if (rowKey == null || "null".equals(rowKey)) return new $tableClassName();
##set($rowKey=$convertUtils.getJavaTypeMask($primaryKeyFirstColumn, "rowKey", $useTemporal))
#if($columnUtils.isString($primaryKeyFirstColumn))
        return ${EJBDaoImplVariable}.load(rowKey);
#else
##        return ${EJBDaoImplVariable}.load(${primaryKeyType}.valueOf(rowKey));
        return ${EJBDaoImplVariable}.load($convertUtils.getJavaTypeMask($primaryKeyFirstColumn, "rowKey", $useTemporal));
#end
#end
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    @Override
    protected ${beanSpringModelServiceClass} getService() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }
}
