#exposeCompositeSpecific()
#exposeSDDProperty()
#set($thisClass=${className})
#addedAreas()
package $packageName;

#if($addXmlBinding)
import javax.xml.bind.annotation.*;
#end

#if($composite.isDirection($in))
#foreach($table in ${composite.entities})
#putImportCompositeInputSDDBean()
import ${sddInputBeanImport};
#end
#else
#foreach($table in ${composite.entities})
#putImportCompositeOutputSDDBean()
import ${sddOutputBeanCollectionImport};
#end
#end

$!updatedAreaImport
/**
 *
 * <p>Title: ${thisClass}</p>
 *
 * <p>Description: Java Bean#if($composite.isDirection($in)) Input#else Output#end composite</p>
 *
 */
#if($addXmlBinding)
@XmlRootElement (name="${thisClass}")
#end
public class ${thisClass} {

#if($composite.isDirection($in))
#foreach($table in ${composite.entities})
#putImportCompositeInputSDDBean()
    private $sddInputBeanClass $sddInputBeanVariable;
#end
#else
#foreach($table in ${composite.entities})
#putImportCompositeOutputSDDBean()
    private $sddOutputBeanCollectionClass $sddOutputBeanCollectionVariable;
#end
#end	

    /**
    * Default constructor
    */
    public ${thisClass}() {
    }
	
    public ${thisClass}(
#set($columns=$queryUtils.getInputCompositeFull($composite))
#foreach ($column in $columns)
#putColumnParamNaming()
#set($var = "$formatUtils.getJavaNameVariable($column.table.name)$columnClass")
        $columnType $var#if ($velocityCount!=$columns.size()),
#end
#end
        ) {
#if($composite.isDirection($in))
#foreach($table in ${composite.entities})
#putImportCompositeInputSDDBean()
        $sddInputBeanVariable = new $sddInputBeanClass ();
#set($columns=$queryUtils.getInputCompositeFull($composite))
#foreach ($column in $columns)
#if($table.name==$column.table.name)
#putColumnParamNaming()
#set($var = "$formatUtils.getJavaNameVariable($column.table.name)$columnClass")
        ${sddInputBeanVariable}.set$columnClass($var);
#end
#end
#end
#end
    }
#if($composite.isDirection($in))
#foreach($table in ${composite.entities})
#putImportCompositeInputSDDBean()
#putGetterSetter($sddInputBeanClass, $sddInputBeanVariable)
#end
#else
#foreach($table in ${composite.entities})
#putImportCompositeOutputSDDBean()
#putGetterSetter($sddOutputBeanCollectionClass, $sddOutputBeanCollectionVariable)
#end
#end

$!updatedAreaImplementation
}
