#exposeQuerySpecific()
#exposeSDDSpring()
#putImportQuerySDDBean()
#addedAreas()
package $packageName;

$!updatedAreaImport

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import $sddOutputBeanCollectionImport;
import $sddOutputBeanImport;
import $sddDaoInterfaceImport;
#if($isNotVoidInput)
import $sddInputBeanImport;
#end
/**
 *
 * <p>Title: ${className}</p>
 *
 * <p>Description: SDD JDBC implementation </p>
 *
 */
public class ${className} implements $sddDaoInterfaceClass{

#set ($fullQuery = $queryUtils.getFullQueryQuestionMark($query))
	public static final String QUERY_NATIVE = "$fullQuery";

#exposeQueryUpdatedAreas("SDD_EXECUTE_GET")
$!updatedAreaBegin
#if($isUpdated)
$!updatedAreaSnippet
#else
    public $sddOutputBeanCollectionClass execute (#if($isNotVoidInput)$sddInputBeanClass $sddInputBeanVariable#end) {
		$sddOutputBeanCollectionClass $sddOutputBeanCollectionVariable = new $sddOutputBeanCollectionClass();
		List<$sddOutputBeanClass> list = executeJDBC (#if($isNotVoidInput)$sddInputBeanVariable#end);
		${sddOutputBeanCollectionVariable}.set$sddOutputBeanClasses (list);
        return ${sddOutputBeanCollectionVariable};
    }
#end
$!updatedAreaEnd

#putSddJdbcLookup()

//if JPA2 implementation is hibernate
	@SuppressWarnings("deprecation")   
   	public Connection getConnection() throws HibernateException {  
		Session session = getSession();  
		Connection connection = session.connection();  
		return connection;  
   	} 
	
   	private Session getSession() {  
   		Session session = (Session) entityManager.getDelegate();  
   		return session;  
   	}
	
$!updatedAreaImplementation

}