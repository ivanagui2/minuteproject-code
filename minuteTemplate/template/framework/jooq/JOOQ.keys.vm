#exposeJOOQModelSpecific()
#addedAreas()
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package $packageName;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.ForeignKey;
$!updatedAreaImport

$!updatedAreaClassAnnotation
@javax.annotation.Generated(value    = {"http://www.jooq.org", "$jooqVersion"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
/**
 * This class is generated by minuteproject 4 jOOQ
 * A class modelling foreign key relationships between tables of the conference schema
 */
@SuppressWarnings({"unchecked"})
public class Keys extends AbstractKeys {

	// IDENTITY definitions
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#if($table.hasPrimaryKey()) ##what about composite pk
	public static final Identity<$entityClassImport, $primaryKeyFullType> IDENTITY_$classNameLowerCase = createIdentity($classConstant, $classPkConstant);
#end
#end

    // UNIQUE and PRIMARY KEY definitions
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#foreach($columns in $table.columns)
#if($tableUtils.isUnique($table, $column))##what about composite unique field not covered
#putJOOQColumnParam()
	public static final UniqueKey<${entityClassImport}> KEY_${classNameUpperCase}_PRIMARY= createUniqueKey($classConstant, ${classFieldConstant});
#end
#end
#end

	// FOREIGN KEY definitions
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#foreach($reference in $table.parents)
#putJOOQReferenceParam()
	public static final ForeignKey<$recordClassImport, $linkedRecordClassImport> fk_${classNameLowerCase}_${columnVariableUpperCase}1 = createForeignKey(KEY_${classNameLowerCase}_PRIMARY, $classConstant, $classFieldConstant);
#end
#end

	/**
	 * No instances
	 */
	private Keys() {}

$!updatedAreaImplementation	
}
