<target name="Spring service">		
	<architecture-target name="Spring service" description="Spring service architecture">
	</architecture-target>	

	<template-target 
		libdir="lib/SPRING_LIB.vm"
		outputdir="src/test/java"
		belongToPackage="true">
		
<!-- 		<template name="TestDaoInterface" templateFileName="BslaDaoInterfaceTest.vm" 
			subdir="" outputsubdir="" technicalPackage="dao.face"
			file-extension="java" file-prefix="" file-suffix="DaoTest" 
			entity-specific="true" package-specific="false" model-specific="false"
			check-template-to-generate="true" 
            is-template-to-generate-method="tableUtils.isTable"	>
			<property name="uml" value="true"></property>
		</template>		 
		-->
		<template name="BslaServiceTestAdapter" templateFileName="BslaDaoTestAdapter.vm" 
			subdir="" outputsubdir="" technicalPackage="service.face"
			file-extension="java" file-prefix="Adapter" file-suffix="TestService" 
			entity-specific="false" package-specific="false" model-specific="true"
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnPropertyPresenceValue"
			has-updatable-nature="true">
			<property name="property-presence" value="add-backend-implementation"></property>
			<property name="property-presence-value" value="spring"></property>
			<property name="context" value="Spring.Service.ApplicationContext.Config"></property>
		</template>					
	</template-target>		
	
	<template-target 
    	name="Spring service"
		libdir="lib/SPRING_LIB.vm"
		outputdir="src/main/resources"
		belongToPackage="true">
		<template name="Spring.Service.ApplicationContext.Config" templateFileName="Spring.Service.ApplicationContext.Config.vm" 
			file-extension="xml" technicalPackage="factory.spring" file-suffix="-service-application-context" 
			application-specific="true" add-model-name="true" add-application-package-dir-name="true"
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnPropertyPresenceValue"
			has-updatable-nature="true">
			<property name="property-presence" value="add-backend-implementation"></property>
			<property name="property-presence-value" value="spring"></property>
		</template>		
			
	</template-target>
	
	<template-target 
    	name="Spring service"
		libdir="lib/SPRING_LIB.vm"
		outputdir="src/main/java"
		belongToPackage="true">
		<property name="DomainEntityUMLTemplate" value="DomainEntityJPA2Annotation" />

		<template name="SpringServiceInterface" templateFileName="SpringServiceInterface.vm" 
			subdir="" outputsubdir="" technicalPackage="service.face"
			file-extension="java" file-prefix="" file-suffix="Service" 
			entity-specific="true"
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnNotMany2Many"
			has-updatable-nature="true">
		</template>	
			
		<!-- depends BslaDaoInterfaceExtendedUML -->	
		<template name="SpringServiceImpl" templateFileName="SpringServiceImpl.vm" 
			subdir="" outputsubdir="" technicalPackage="service.impl"
			file-extension="java" file-prefix="" file-suffix="ServiceImpl" 
			entity-specific="true" 
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnNotMany2Many"
			has-updatable-nature="true">
		</template>

        <!-- Take care the service and the DAO are the same so just one physical template -->
		<template name="SDDServiceInterface" templateFileName="SDDDaoInterface.vm" 
			subdir="" outputsubdir="" technicalPackage="service.face"
			file-extension="java" file-prefix="" file-suffix="Service" 
			add-package-name="false" add-business-package-dir-name="false"
			scope-specific-value="query"
			has-updatable-nature="true">
		</template>	
			
		<!-- depends BslaDaoInterfaceExtendedUML -->	
		<template name="SDDSpringServiceImpl" templateFileName="SDDSpringServiceImpl.vm" 
			subdir="" outputsubdir="" technicalPackage="service.impl"
			file-extension="java" file-prefix="" file-suffix="ServiceImpl" 
			add-package-name="false" add-business-package-dir-name="false"
			scope-specific-value="query"
			has-updatable-nature="true">
		</template>		
		
		<!-- spring model service -->
		<template name="SpringModelServiceInterface" templateFileName="SpringModelServiceInterface.vm" 
			subdir="" outputsubdir="" technicalPackage="service.face"
			file-extension="java" file-prefix="" file-suffix="ModelService" 
			model-specific="true"
			has-updatable-nature="true">
		</template>	
			 
		<template name="SpringModelServiceImpl" templateFileName="SpringModelServiceImpl.vm" 
			subdir="" outputsubdir="" technicalPackage="service.impl"
			file-extension="java" file-prefix="" file-suffix="ModelServiceImpl" 
			model-specific="true" 
			has-updatable-nature="true">
		</template>
		
		<template name="SpringScheduler" templateFileName="SpringScheduler.vm" 
			subdir="" outputsubdir="" technicalPackage="scheduler"
			file-extension="java" file-prefix="" file-suffix="Scheduler" 
			model-specific="true" 
			check-template-to-generate="true" is-template-to-generate-method="schedulerUtils.isToGenerateBasedOnSchedulerEntry"
			has-updatable-nature="true">
		</template>
		<!-- check-template-to-generate="true" is-template-to-generate-method="schedulerUtils.isToGenerateBasedOnSchedulerEntry" -->
		
	</template-target>
</target>