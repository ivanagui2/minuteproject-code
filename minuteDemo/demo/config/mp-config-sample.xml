<!DOCTYPE root>
<generator-config>
	<configuration>
		<model name="petshop" version="1.0" package-root="sf.net.mp.demo">
			<data-model>
			    <!--  --><driver name="hsqldb" version="1.8.0.7" groupId="hsqldb" artifactId="hsqldb"></driver>
			    <dataSource>	
					<driverClassName>org.hsqldb.jdbcDriver</driverClassName>
					<url>jdbc:hsqldb:hsql://127.0.0.1:9001/petshop</url>
					<username>sa</username>
					<password></password>	
				</dataSource>
				<!-- for Oracle and DB2 please set the schema 
				<schema> </schema>
				 -->
				<primaryKeyPolicy oneGlobal="true" oneForEachTable="false">
					<primaryKeyPolicyPattern prefix="" suffix="" name="sequencePattern" sequenceName="hibernate_sequence"></primaryKeyPolicyPattern>
				</primaryKeyPolicy>
			</data-model>
			<business-model>
				<generation-condition>
					<condition type="exclude" startsWith="DUAL"></condition>
				</generation-condition>		
				<business-package default="pet">
					<condition type="package" startsWith="TB_" result="other"></condition>
				</business-package>		
				<enrichment>
					<entity name="CATEGORY" content-type="reference-data" />
				</enrichment>					
			</business-model>
		</model>
		
		<targets>
		    <!-- uncomment this to have a mvn spring hibernate backend
			<target refname="BackendOnBsla" 
			   name="default" 
			   fileName="mp-template-config-bsla-hibernate-last-features.xml" 
			   outputdir-root="../output/myworkHibernateLastFeature"
			   templatedir-root="../../template">
			</target> 
			-->

			<!-- uncomment this to have a mvn spring hibernate backend + a vaadin web front end
			<target refname="BackendOnBsla" 
			   name="bsla-hibernate" 
			   fileName="mp-template-config-bsla-hibernate-last-features.xml" 
			   outputdir-root="../output/vaadin/myworkHibernate"
			   templatedir-root="../../template">
			</target> 	
			<target refname="MpVaadin" 
			   name="vaadin" 
			   fileName="mp-template-config-vaadin-last-features.xml" 
			   outputdir-root="../output/vaadin/myworkVaadin"
			   templatedir-root="../../template/framework/vaadin">
			</target> 				
			 -->		
			 
			 <!-- uncomment this to have a mvn spring JPA backend
			<target refname="BackendOnBsla" 
			   name="default" 
			   fileName="mp-template-config-bsla-JPA-last-features.xml" 
			   outputdir-root="../output/myworkJpaLastFeature"
			   templatedir-root="../../template">
			</target> 			 
			  -->		
			  
			<!-- uncomment this to have a fitnesse wiki + fixture 
			<target refname="FitNesse" 
			   name="default" 
			   fileName="mp-template-config-fitnesse.xml" 
			   outputdir-root="../output/myworkFitnesse"
			   templatedir-root="../../template">
			</target> 			
			 -->		
			 
			 <!-- uncomment this to have a spring hibernate backend
			<target refname="BackendOnBsla" name="default" 
	      		fileName="mp-template-config-hibernate.xml"
	      		outputdir-root="../output/myworkHibernate/src-generated">
			</target> 			 
			  -->
			  
			 <!-- uncomment this to have a spring iBatis backend
			<target refname="BackendOnBsla" name="default"  
				fileName="mp-template-config-ibatis.xml" 
				outputdir-root="../output/myworkIbatis/src-generated"
				templatedir-root="../../template">
			</target> 			 
			  -->		
			  
			 <!-- uncomment this to have a spring JPA backend
			<target refname="BackendOnBsla" name="default" 
				fileName="mp-template-config-jpa.xml" 
				outputdir-root="../output/myworkJpa/src-generated"
				templatedir-root="../../template">
			</target> 			 
			  -->	
			  
			  <!-- uncomment this to have an OpenXava web application
				<target refname="LIB" 
				   fileName="mp-template-config-bsla-LIB-features.xml" 
				   templatedir-root="../../template">
				</target> 	
				<target refname="OpenXava" 
				   name="OpenXava" 
				   fileName="mp-template-config-openxava-last-features.xml" 
				   outputdir-root="../output/openxava/petshopOpenXava"
				   templatedir-root="../../template/framework/openxava">
				</target>			  
			   -->	
			   
			 <!-- uncomment this to have a Roo backend
				<target refname="Roo" 
				   name="Roo" 
				   fileName="mp-template-config-roo-last-features.xml" 
				   outputdir-root="../output/roo/petshopRoo"
				   templatedir-root="../../template/framework/roo">
				</target> 
				<target refname="LIB" 
				   fileName="mp-template-config-bsla-LIB-features.xml" 
				   templatedir-root="../../template">
				</target> 			 
			  -->	  	  
		</targets>

	</configuration>
</generator-config>