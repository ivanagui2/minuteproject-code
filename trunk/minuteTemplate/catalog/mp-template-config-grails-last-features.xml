<target name="Grails">		
	<architecture-target name="openxava" description="openxava architecture">
	</architecture-target>	
    <plugin name="hibernate3" className="net.sf.minuteProject.plugin.hibernate.Hibernate3"></plugin>
    <plugin name="enrichmentUtils" className="net.sf.minuteProject.utils.enrichment.EnrichmentUtils"></plugin>
	<plugin name="i18nUtils" className="net.sf.minuteProject.plugin.format.I18nUtils"></plugin>	
	<plugin name="javaUtils" className="net.sf.minuteProject.utils.java.JavaUtils"></plugin>	
	<plugin name="entitySecurityUtils" className="net.sf.minuteProject.utils.security.EntitySecurityUtils"/>
	<plugin name="authorizationUtils" className="net.sf.minuteProject.utils.security.AuthorizationUtils"/>
   	<plugin name="grailsUtils" className="net.sf.minuteProject.plugin.grails.GrailsUtils"/>
   	<plugin name="referenceUtils" className="net.sf.minuteProject.utils.ReferenceUtils"/>
   	
  	<template-target 
    	name="Grails domain"
		outputdir="grails-app/domain"
		libdir="lib/Grails_LIB.vm"
		>
			 
		<template name="DomainObjectUML" templateFileName="GrailsGorm.vm" 
			file-extension="groovy"
			entity-specific="true"
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnNotMany2Many">
			>
		</template>	
					
	</template-target>
	
  	<template-target 
    	name="Grails controllers"
		outputdir="grails-app/controllers"
		>
			 
		<template name="GrailsController" templateFileName="GrailsController.vm" 
			file-extension="groovy"
			entity-specific="true" file-suffix="Controller" 
			check-template-to-generate="true" is-template-to-generate-method="enrichmentUtils.isToGenerateBasedOnNotMany2Many">
			>
		</template>	
					
	</template-target>
		
  	<template-target 
    	name="Grails config"
		outputdir="grails-app/conf" >
			
		<template package-root=""
			name="GrailsBuildConfig" templateFileName="GrailsBuildConfig.vm" 
			add-model-name="false" add-model-dir-name="false"
			file-extension="groovy" file-prefix="BuildConfig"
			model-specific="true">
		</template>	

		<template package-root=""
			name="GrailsDataSource" templateFileName="GrailsDataSource.vm" 
			add-model-name="false" add-model-dir-name="false"
			file-extension="groovy" file-prefix="DataSource"
			model-specific="true">
		</template>	
											
	</template-target>	
			
  	<template-target 
    	name="Grails config"
		outputdir="" >
			
		<template package-root=""
			name="GrailsBuildCommandWindows" templateFileName="GrailsBuildCommandWindows.vm" 
			subdir="" outputsubdir="" technicalPackage="" add-model-name="true" 
			add-model-dir-name="false"
			file-extension="cmd" file-prefix="build-" file-suffix="" 
			application-specific="true">
		</template>	
				
		<template package-root=""
			name="GrailsBuildCommandBash" templateFileName="GrailsBuildCommandBash.vm" 
			subdir="" outputsubdir="" technicalPackage="" add-model-name="true" 
			add-model-dir-name="false"
			file-extension="sh" file-prefix="build-" file-suffix="" 
			application-specific="true">
		</template>
											
	</template-target>				
</target>