#exposeBackendTechnology()
#exposeMaven()
#exposeJPA2Specifics()
#putJPA2TemplateDefinition()
#set($isQuerydslPowered=$template.hasProperty("add-querydsl"))
#set($querydslVersion=$template.getPropertyValue("add-querydsl"))
#set($bslaJpaVersion=$template.getPropertyValue("bsla-jpa-version"))
##set($jpa2Implementation=$jpaUtils.getJpa2Implementation($template))
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>    
  	<groupId>${rootPackage}.${model.name}</groupId>
  	<artifactId>$DbApiName</artifactId>
  	<packaging>jar</packaging>
  	<version>${version}-SNAPSHOT</version>
  	<name>$DbApiName JPA2 specification and implementation</name>

    <dependencies>
#addMavenDependencyJdbcDriver()
#*
        <!-- JDBC driver --> 
#if($hasDriver)		
        <dependency>
            <groupId>$driver.groupId</groupId>
            <artifactId>$driver.artifactId</artifactId>
            <version>$driver.version</version>        
        </dependency>    
#else
	    <!-- add jdbc driver : it is not provided in the configuration -->
#end
*#
        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        
	    
	    <!-- Logging -->
        <!-- remove the real commons-logging from classpath -->
        <!-- declare as provided or exclude from spring jars -->
        <dependency>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- add slf4j interfaces to classpath -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.4</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- add commons logging to slf4j bridge to classpath --> 
        <!-- acts as jcl but routes commons-logging calls to slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.6.4</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- add log4j binding to classpath -->
        <!-- routes slf4j calls to log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.4</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- add log4j to classpath -->
        <!-- does the logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        	            
		<!-- JPA2 provider $jpa2Implementation -->
#if($jpa2ImplementationIsEclipseLink)
        <dependency>
          <groupId>org.eclipse.persistence</groupId>
          <artifactId>eclipselink</artifactId>
          <version>2.0.0</version>
        </dependency>
#else
	    <dependency>
	      <groupId>org.hibernate</groupId>
	      <artifactId>hibernate-entitymanager</artifactId>
##	      <version>3.5.1-Final</version>
	      <version>${hibernateVersion}</version>
	    </dependency>

		<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>1.0.0.GA</version>
		    <scope>compile</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>4.0.2.GA</version>
		    <scope>runtime</scope>
		</dependency>
 
#end
#if ($groovify)
        <dependency>     
        	<groupId>org.codehaus.groovy</groupId>     
        	<artifactId>groovy-all</artifactId>     
        	<version>${groovyVersion}</version>   
        </dependency>
#end
#if ($isCacheEnabled)
		<!-- caching -->
#* before hib 4 
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.3.0</version>
		</dependency>
*#
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernateVersion}</version>
        </dependency>
#end
#if ($hasABLNature)
        <dependency>
            <groupId>com.autobizlogic.abl</groupId>
            <artifactId>autobizlogic</artifactId>
            <version>$autobizlogicVersion</version>
        </dependency>
#end
#if($isQuerydslPowered)	
	    <!-- querydsl integration -->
        <dependency>
          <groupId>com.mysema.querydsl</groupId>
          <artifactId>querydsl-apt</artifactId>
          <version>${querydsl.version}</version>
          <scope>provided</scope>
        </dependency>    
    
        <dependency>
          <groupId>com.mysema.querydsl</groupId>
          <artifactId>querydsl-jpa</artifactId>
          <version>${querydsl.version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
              </exclusion>
          </exclusions>          
        </dependency>
#end	
#if($addDomainSpecificMethod)
        <dependency>
          <groupId>org.mod4j.org.apache.commons</groupId>
          <artifactId>lang</artifactId>
          <version>2.1.0</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>        
    
    	<dependency>
    	  <groupId>commons-beanutils</groupId>
    	  <artifactId>commons-beanutils</artifactId>
    	  <version>1.8.3</version>
    	</dependency>
    	
        <dependency>
          <groupId>net.sf.minuteproject</groupId>
          <artifactId>mp-bsla-jpa</artifactId>
          <version>$bslaJpaVersion</version>
          <exclusions>          
              <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
              </exclusion>          
#if($isEJBBackend)
              <exclusion>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-context</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-orm</artifactId>
              </exclusion>
#end
          </exclusions>
        </dependency>	
#end	
    </dependencies>
	<properties>
#if($isQuerydslPowered)	
      <querydsl.version>$querydslVersion</querydsl.version>
#end 
#if($groovify)	
      <gmavenVersion>1.4</gmavenVersion>   
      <gmavenProviderSelection>2.0</gmavenProviderSelection>   
      <groovyVersion>2.0.0</groovyVersion>
#end 
      <hibernateVersion>4.3.0.Beta3</hibernateVersion>
    </properties>
    <build>
        <!--<finalName>$DbApiName</finalName>-->
        <resources>
          <!-- overwrite generated artifacts for packaging: for example by providing another jndi name ... -->
    	  <resource>
    		<directory>src-overwritten/main/resources</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
    	  </resource>    
    	  <resource>
    		<directory>$resourcesDir</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
    	  </resource>
    	</resources> 		
        <plugins>
#if($groovify)
            <plugin>
            	<groupId>org.codehaus.gmaven</groupId>
            	<artifactId>gmaven-plugin</artifactId>
            	<version>${gmavenVersion}</version>
            	<configuration>           
            	<providerSelection>${gmavenProviderSelection}</providerSelection>
            	<sourceEncoding>UTF-8</sourceEncoding>
            	</configuration>         
            	<executions>           
                	<execution>             
                    	<goals>               
                        	<goal>generateStubs</goal>
                        	<goal>compile</goal>
                        	<goal>generateTestStubs</goal>
                        	<goal>testCompile</goal>             
                    	</goals>           
                	</execution>
            	</executions>
            	<dependencies>
                	<dependency>            
                	<groupId>org.codehaus.groovy</groupId>
                	<artifactId>groovy-all</artifactId>            
                	<version>${groovyVersion}</version>
                	</dependency>        
            	</dependencies>
        	</plugin>
#end
            <plugin>
                <!-- Force UTF-8 & Java-Version 1.6 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <!--<encoding>utf-8</encoding>-->
                </configuration>
            </plugin>
#if($isQuerydslPowered && !$groovify)	            
            <!-- querydsl integration -->
            <plugin>
                  <groupId>com.mysema.maven</groupId>
                  <artifactId>maven-apt-plugin</artifactId>
                  <version>1.0</version>
                  <executions>
                    <execution>
                      <goals>
                        <goal>process</goal>
                      </goals>
                      <configuration>
                        <outputDirectory>target/generated-sources/java</outputDirectory>
                        <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                      </configuration>
                    </execution>
                  </executions>
            </plugin> 
#end           
        </plugins>
    </build>
    <repositories>
#if($jpa2ImplementationIsEclipseLink)
      <repository>
        <id>EclipseLink Repo</id>
     <!-- note that ampersands in this URL are escaped because this is in an xml file -
            un-escape them to use in browser 
     -->
         <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
     <!-- use this for javax.persistence
     <snapshots>
        <enabled>true</enabled>
     </snapshots> -->
       </repository>    
#end
#if ($hasABLNature)
       <repository>
         <id>automated-business-logic</id>
         <name>Automated Business Logic repository</name>
         <url>http://resources.automatedbusinesslogic.com/maven2</url>
       </repository>
#end
       <repository>
         <id>sonatype-repo</id>
         <name>Sonatype repository</name>
         <url>https://oss.sonatype.org/content/repositories/releases</url>
       </repository>
    </repositories>   
</project>