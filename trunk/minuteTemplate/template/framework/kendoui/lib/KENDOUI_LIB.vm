#macro(putKendoUIJSImport)
#set($kendoUiVersion="2014.1.416")
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/jquery.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/kendo.all.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/cultures/kendo.culture.en-GB.min.js"></script>
<script src="/$kendoUiMainJsPath"></script>

<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.common.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.rtl.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.blueopal.min.css" rel="stylesheet" />
<link href="/$kendoUiMainCssPath" rel="stylesheet" />

#end

#macro(putKendoUIMenuPackage)
##https://github.com/insanio/kendoui.ex/tree/master/examples inspiration
#set($displayableEntities = $presentationUtils.getDisplayableEntityFromPackage($package))
#set($displayableEntityGroups = $presentationUtils.getDisplayableEntityGroups($package))
#set($packageLabel=$i18nUtils.getPackageName($package))
#set($subMenuVar = "submenu${package.name}")
#set($tabVar = "tab${package.name}")
#if(!$displayableEntities.isEmpty())
<li>$packageLabel
    <ul>
#foreach ($groups in $displayableEntityGroups)	
#foreach ($table in ${groups})
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
#set($accessUrl=$kendoUIUtils.getAccessUrl($table.name))
        <li><a onclick="openEntityContent('$table.name');"> $tableLabel</a></li>
#end
#end
    </ul>
</li>
#end
#end

#macro (putKendoHtmlColumnSnippet $tableVariableName $internat)
#set($labelFor=$columnVar)
#set($fieldId="field-$columnVar")
<div class="row">
	<div class="cell" style="vertical-align: bottom;">
		<label for="$fieldId" #if($column.isRequired())class="required"#end>$columnVar</label><!-- i18n -->
	</div>
	<div class="cell" style="vertical-align: bottom;">
#if($columnUtils.hasCheckConstraint($column))
	<select name="$labelFor" id="$fieldId" 
		data-bind="source: ${columnVar}List, value: ${columnVar}" 
## 	data-select="selectTODO"
		data-text-field="value"
		data-value-field="${columnVar}"
		data-option-label="Select"
		#if($column.isRequired())required#end data-required-msg="Select $columnVar" style="width: 200px;">
#if(!$column.isRequired())
#end
     </select>
##     <span class="k-invalid-msg" data-for="$labelFor"></span>
#elseif($columnUtils.isLink($column))
#set($targetQuery = $model.getStatementModel().getQueryById($column.queryParamLink.queryName))
#set($columnText = $queryUtils.getColumnTextVariable($targetQuery))
#set($columnValue = $queryUtils.getColumnValueVariable($targetQuery))
	<select name="$labelFor" id="$fieldId" 
		data-bind="source: ${columnVar}DDL, value: ${columnVar}Selected"
		data-text-field="$columnText"
		data-value-field="${columnValue}"
		data-option-label="Select"
		#if($column.isRequired())required#end data-required-msg="Select $columnVar" style="width: 200px;">
#if(!$column.isRequired())
#end
     </select>
#else
## time
#if($columnUtils.isTimeColumn($column))
		<input id="$fieldId" data-bind="value: ${columnVar}" />
#else
## boolean
#if($columnUtils.isBoolean($column))
	<input type="checkbox" data-bind="value: ${columnVar}" #if($column.isRequired())required="true"#end /> 
##	<p:selectBooleanCheckbox id="lbl${columnClass}-#{idValue}" value="#{${entityControllerJSFVariable}.${tableVariableName}.${columnVar}}" />
#else
## textarea
#if($presentationUtils.isTextArea($column))
	<textarea type="text" id="$fieldId" data-bind="value: ${columnVar}" name="$labelFor" class="k-textbox" placeholder="${columnVar}" #if($column.isRequired())required="true"#end rows="$presentationUtils.getDisplayRows($column)" cols="$presentationUtils.getDisplayColumns($column)" validationMessage="Enter {0}" style="width: 200px;" ></textarea> 
#elseif($presentationUtils.isRichText($column))
##	<p:editor
	<textarea type="text" id="$fieldId" data-bind="value: ${columnVar}"name="$labelFor" class="k-textbox" placeholder="${columnVar}" #if($column.isRequired())required="true"#end validationMessage="Enter {0}" style="width: 200px;" /> 
## simple input
#else
	<input type="text" id="$fieldId" data-bind="value: ${columnVar}" name="$labelFor" class="k-textbox" placeholder="${columnVar}" #if($column.isRequired())required="true"#end validationMessage="Enter {0}" style="width: 200px;" />
##	<p:inputText 
##		size="$primefacesUtils.getDisplayColumns($column)" maxlength="$column.sizeAsInt" 
#end
##	<input type="text" id="$labelFor" name="$labelFor" class="k-textbox" placeholder="${columnVar}" required="$column.isRequired()" validationMessage="Enter {0}" style="width: 200px;" />
##		label="${columnClass}" id="lbl${columnClass}-#{idValue}" value="#{${entityControllerJSFVariable}.${tableVariableName}.${columnVar}}" required="$column.isRequired()"/>
#end
## file upload entry to do
#end
#end
#####	<p:message for="lbl${columnClass}-#{idValue}" />
	</div>
</div>
#end

#macro (putKendoJsColumnSnippet $tableVariableName $internat)
#set($labelFor=$columnVar)
#set($fieldId="field-$columnVar")
#if($columnUtils.hasCheckConstraint($column))
	$("#${fieldId}").kendoDropDownList();
#elseif($columnUtils.isTimeColumn($column))
	$("#${fieldId}").kendoDatePicker();
#elseif($columnUtils.isBoolean($column))
#elseif($presentationUtils.isTextArea($column))
##	<p:inputTextarea rows="$primefacesUtils.getDisplayRows($column)" cols="$primefacesUtils.getDisplayColumns($column)" maxlength="$column.sizeAsInt" width="$column.sizeAsInt" 
##        counterTemplate="{0} characters remaining." autoResize="false"
#elseif($presentationUtils.isRichText($column))

#else

#end
#end

#macro (putJSFColumnSnippet2)
#putJSFColumnSnippet("selected${tableClassName}" ${tableVariableName})
#end

#macro(putKendoUIMenu)
    $(document).ready(function() {
        $("#${model.name}-Menu").kendoMenu();
    });
#end
#macro(putKendoUIMenuREST)
  $("#${model.name}-Menu").kendoMenu({ 
   dataSource: {
    error: function (e) {
##     if (e.errors !== false) {
##        $("#${tableVariableName}ListFooter").text(e.errors);
##     }
    },
	transport: {
     read: {
      url: "data/model/menu", //package.name (entity,+URL)
      dataType: "json",
      contentType: "application/json; charset=utf-8",
      cache: false
     }
    },
    schema: {
     data: "data",
     total: "total",
     errors: "error"
    },
    columns: [
#foreach ($column in $table.columns)
#putColumnParamNaming()
     {
      template: kendo.template($("#grid-template-$column.alias").html()),
      title: '$column.alias',
#if($isLengthPrecisionColumn)     width:$column.size,#end
      headerAttributes: "$columnVar"
##///format: "{0: dd/MM/yyyy}",  $counter  $velocityCount
##///filterable: false
     }
#if ($velocityCount!=$table.columnCount)
    ,#end 
##set($counter=$counter+1)
#end
     ]
    });
#end

#macro(exposeKendoUISDDActions)
#foreach ($action in $query.actions)
#if(!$actionUtils.isReservedAction($action))
	function $actionUtils.getActionMethod($action) (e) {
		e.preventDefault();
		var rowId = $("#ssd-output-grid").data("kendoGrid").select().data("uid");
		var item = $("#ssd-output-grid").data("kendoGrid").dataSource.getByUid(rowId);
##		kendo.ui.progress($("#ssd-output-grid"), true);
#exposeEntityUpdatedAreas("${action.name}-action")
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
//		todo get url from query
#set($queryId = $action.getQueryId())
#set($targetQuery = $model.getStatementModel().getQueryById($queryId))
#set($targetUrl = $commonUtils.getArtifactRelativePathDirAndFullName($targetQuery, $template, $templateKendoUiSddDirectResult))
		var targetUrl = "$targetUrl";
#set($cpt=0)
#foreach ($field in $query.queryFields)
#if ($field.isKey())
#set($fieldName=$field.name)
		var $fieldName = item.get("$fieldName"); //$cpt
		targetUrl = targetUrl +#if($cpt==0)"?"#else"&"#end +"$fieldName="+$fieldName;  
#set($cpt=$cpt+1)
#end
#end
#foreach ($actionEntry in $action.actionFieldMapEntries)
#set($fieldName=$actionEntry.outputField)
#set($to=${actionEntry.toActionField})
		var $to = item.get("$fieldName");
		targetUrl = targetUrl +#if($cpt==0)"?"#else"&"#end +"$to="+$to;  
#set($cpt=$cpt+1)
#end
//			append parameters
//		if (target == single node 	=> popup)
//		if (target == list 			=> add list)
#end
		openPopup ($action.name,targetUrl, 1000, 600);
$!updatedAreaEnd
	}

#end
#end
#end

#macro(exposeKendoUISDDDGrid)
                $("#ssd-output-grid").kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: dataSourceUrl,
                                dataType: "json",
                                contentType: "application/json; charset=utf-8",
                                cache: false
                            }
                        }
                        ,
                        schema: {
                            data: "$sddOutputBeanClass"
                        }
                    },
##                    change: function () {
##						var rowId = this.select().data("uid");
##						var item = this.dataSource.getByUid(rowId);
##						kendo.ui.progress($("#ssd-output-grid"), true);
##						select4Info(item);
##					},
                    resizable: true,
                    sortable: {
                        mode: "single",
                        allowUnsort: false
                    },
                    pageable: {
                        buttonCount: 5
                    },
					columns: [
#foreach($column in $outputBean.columns)
#putColumnParamNaming()
					{
						//TODO hide
	                	field: "$columnVar",
	                	title: "$columnVar",
#updatedColumnAttributeAreas()
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
//						width : toset,
#end
$!updatedAreaEnd
						hidden : false
	            	}
#if ($query.actions.size()>0 || $velocityCount!=$outputBean.columns.size())
                	,#end 
#end
#foreach ($action in $query.actions)
					{ command: { text: "$actionUtils.getActionLabel($action)", click: $actionUtils.getActionMethod($action) }, title: " ", width: "180px" }
#if ($velocityCount!=$query.actions.size())
                	,#end 
#end
	            	],
                    height: 500,
                    scrollable: true,
                    selectable: true

                });
#end

#macro(exposeKendoUIDetailAction)
<script type="text/x-kendo-template" id="template-detail">

<div style="display: table; width: 100%; margin-top: 10px;">

#foreach($column in $outputBean.columns)
#putColumnParamNaming()
<div class="row">
	<div class="cell" style="vertical-align: bottom;">
		<label>$columnVar</label><!-- i18n -->
	</div>
	<div class="cell" style="vertical-align: bottom;">#= $columnVar #</div>
</div>
#end
</div>

</script>
#end

#macro(exposeKendoUIDetailWindowTemplate)
		wnd = $("#details").kendoWindow({
           title: "$className Details",
           modal: true,
           visible: false,
           resizable: true,
           width: 300
           }).data("kendoWindow");
		detailsTemplate = kendo.template($("#template-detail").html());
#end

#macro(exposeKendoUIModelSpecific)
#exposeKendoUITemplate()
#set($kendoUiMenuPath=$commonUtils.getTemplateArtifactName($generatorBean, $templateKendoUiMenu))
#set($kendoUiMainCssPath=$commonUtils.getArtifactRelativePathDirAndFullName($model, $template, $templateKendoUiMainCss))
#set($kendoUiMainJsPath=$commonUtils.getArtifactRelativePathDirAndFullName($model, $template, $templateKendoUiMainJs))
#end
#macro(exposeKendoUIEntitySpecific)
#exposeKendoUITemplate()
#set ($entityFullPath =$commonUtils.getArtifactRelativePathDirAndFullName($table, $templateEntitySearchGridList))
#end

#macro(exposeKendoUISddSpecific)
#exposeKendoUITemplate()
#set ($entityFullPath =$commonUtils.getArtifactRelativePathDirAndFullName($query, $template, $templateKendoSddInput))
#set ($sddInputBeanImport = $commonUtils.getEntityLevelTemplateFullPath($table, $template, $templateKendoSddInput))
#end

#macro (exposeRestDbApiDomainObject)
#exposeDbApiRestTemplate()
#set ($RESTDbAPIGenericResourceClass = $commonUtils.getTemplateClassName($model, $template, $templateRESTDbApiGenericResource))
#set ($RESTDbAPIGenericResourceImport = $commonUtils.getModelLevelTemplateFullPath($model, $template, $templateRESTDbApiGenericResource))
#end

#macro (exposeDbApiRestQuerySpecific)
#exposeQuerySpecific()
#exposeDbApiRestTemplate()
#set($queryInputSDDRelativePath = $commonUtils.getArtifactRelativePathDirAndFullName($query, $template, $templateRESTDbApiSDDResource))
#set($dateParamImport = $commonUtils.getModelLevelTemplateFullPath($model, $template, $templateRESTDateParam))
#end

#macro (exposeDbApiRestTemplate)
#set($templateRESTDbApiGenericResource="RESTDbAPIGenericResource")
#set($templateRESTDbApiSDDResource="RESTDbAPISDDResource")
#set($templateRESTDateParam="REST.DateParam")
#end

#macro(exposeKendoUITemplate)
#set($templateEntitySearchGridList="KendoUiEntitySearchGrid")
#set($templateKendoSddInput="KendoUiSDDInput")
#set($templateKendoUiMenu="KendoUiMenu")
#set($templateKendoUiMainCss="KendoUiMainCss")
#set($templateKendoUiMainJs="KendoUiMainJs")
#set($templateKendoUiSddDirectResult="KendoUiSDDDirectResult")
#end
