#macro(putKendoUIJSImport)
#set($kendoUiVersion="2014.1.416")
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/jquery.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/kendo.all.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/cultures/kendo.culture.en-GB.min.js"></script>

<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.common.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.rtl.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.blueopal.min.css" rel="stylesheet" />

#end
#macro(putKendoUIMenuPackage)
##https://github.com/insanio/kendoui.ex/tree/master/examples inspiration
#set($displayableEntities = $presentationUtils.getDisplayableEntityFromPackage($package))
#set($displayableEntityGroups = $presentationUtils.getDisplayableEntityGroups($package))
#set($packageLabel=$i18nUtils.getPackageName($package))
#set($subMenuVar = "submenu${package.name}")
#set($tabVar = "tab${package.name}")
#if(!$displayableEntities.isEmpty())
<li>$packageLabel
    <ul>
#foreach ($groups in $displayableEntityGroups)	
#foreach ($table in ${groups})
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
#set($accessUrl=$kendoUIUtils.getAccessUrl($table.name))
##        ${subMenuVar}.addElement(getItem("$tableLabel", ${accessUrl})); 
##		${tabVar}.getChildren().add(getPanel(getTuple (${accessUrl})));
        <li><a onclick="openEntityContent('$table.name');"> $tableLabel</a></li>
#end
#end
    </ul>
</li>
#end
#end

#macro(putKendoUIMenu)
    $(document).ready(function() {
        $("#${model.name}-Menu").kendoMenu();
    });
#end
#macro(putKendoUIMenuREST)
  $("#${model.name}-Menu").kendoMenu({ 
   dataSource: {
    error: function (e) {
##     if (e.errors !== false) {
##        $("#${tableVariableName}ListFooter").text(e.errors);
##     }
    },
	transport: {
     read: {
      url: "data/model/menu", //package.name (entity,+URL)
      dataType: "json",
      contentType: "application/json; charset=utf-8",
      cache: false
     }
    },
    schema: {
     data: "data",
     total: "total",
     errors: "error"
    },
    columns: [
#foreach ($column in $table.columns)
#putColumnParamNaming()
     {
      template: kendo.template($("#grid-template-$column.alias").html()),
      title: '$column.alias',
#if($isLengthPrecisionColumn)     width:$column.size,#end
      headerAttributes: "$columnVar"
##///format: "{0: dd/MM/yyyy}",  $counter  $velocityCount
##///filterable: false
     }
#if ($velocityCount!=$table.columnCount)
    ,#end 
##set($counter=$counter+1)
#end
     ]
    });
#end

#macro(exposeKendoUITemplate)
#set($templateEntitySearchGridList="KendoUiEntitySearchGrid")
#end

#macro(exposeKendoUIEntitySpecific)
#exposeKendoUITemplate()
#set ($entityFullPath =$commonUtils.getArtifactRelativePathDirAndFullName($table, $templateEntitySearchGridList))
#end

