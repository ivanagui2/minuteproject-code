#macro(putKendoUIJSImport)
#set($kendoUiVersion="2014.1.416")
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/jquery.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/kendo.all.min.js"></script>
<script src="http://cdn.kendostatic.com/${kendoUiVersion}/js/cultures/kendo.culture.en-GB.min.js"></script>

<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.common.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.rtl.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/${kendoUiVersion}/styles/kendo.blueopal.min.css" rel="stylesheet" />
#end

#macro(putKendoUIMenuPackage)
##https://github.com/insanio/kendoui.ex/tree/master/examples inspiration
#set($displayableEntities = $presentationUtils.getDisplayableEntityFromPackage($package))
#set($displayableEntityGroups = $presentationUtils.getDisplayableEntityGroups($package))
#set($packageLabel=$i18nUtils.getPackageName($package))
#set($subMenuVar = "submenu${package.name}")
#set($tabVar = "tab${package.name}")
#if(!$displayableEntities.isEmpty())
<li>$packageLabel
    <ul>
#foreach ($groups in $displayableEntityGroups)	
#foreach ($table in ${groups})
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
#set($accessUrl=$kendoUIUtils.getAccessUrl($table.name))
##        ${subMenuVar}.addElement(getItem("$tableLabel", ${accessUrl})); 
##		${tabVar}.getChildren().add(getPanel(getTuple (${accessUrl})));
        <li><a onclick="openEntityContent('$table.name');"> $tableLabel</a></li>
#end
#end
    </ul>
</li>
#end
#end

#macro (putKendoHtmlColumnSnippet $tableVariableName $internat)
#set($labelFor=$columnVar)
#set($fieldId="field-$columnVar")
<li>
	<label for="$fieldId" #if($column.isRequired())class="required"#end>$columnVar</label><!-- i18n -->
##	<p:outputLabel>#{i18n.$internat$separator$columnVar}#if($column.isRequired()) *#end</p:outputLabel>
## enum
#if($isEnum)
	<select name="$labelFor" id="$fieldId" #if($column.isRequired())required#end data-required-msg="Select $columnVar" style="width: 200px;">
#if(!$column.isRequired())
        <f:selectItem noSelectionOption="true" itemLabel="Please Select"/>
#end
		<option>todo</option>
     </select>
     <span class="k-invalid-msg" data-for="$labelFor"></span>
##		<f:selectItems value="#{${lookupEnumVar}.${domainVariableName}${columnClass}Array}" itemValue="#{item}" var="item" itemLabel="#{item.name()}" />
##    </p:selectOneMenu>	
#else
## time
#if($columnUtils.isTimeColumn($column))
#*
    <p:calendar value="#{${entityControllerJSFVariable}.${tableVariableName}.${columnVar}}"
       id="lbl${columnClass}-#{idValue}" ##converter="dateTsConverter"
       converterMessage="Invalid Date" required="$column.isRequired()"
       pattern="dd/MM/yyyy">
    </p:calendar>
*#
##	<p:message for="lbl${columnClass}-#{idValue}" />
#else
## boolean
#if($columnUtils.isBoolean($column))
	<input type="checkbox" /> 
##	<p:selectBooleanCheckbox id="lbl${columnClass}-#{idValue}" value="#{${entityControllerJSFVariable}.${tableVariableName}.${columnVar}}" />
#else
## textarea
#if($presentationUtils.isTextArea($column))
	<textarea type="text" id="$fieldId" name="$labelFor" class="k-textbox" placeholder="${columnVar}" required="$column.isRequired()" rows="$presentationUtils.getDisplayRows($column)" cols="$presentationUtils.getDisplayColumns($column)" validationMessage="Enter {0}" style="width: 200px;" ></textarea> 
#elseif($presentationUtils.isRichText($column))
##	<p:editor
	<input type="text" id="$fieldId" name="$labelFor" class="k-textbox" placeholder="${columnVar}" required="$column.isRequired()" validationMessage="Enter {0}" style="width: 200px;" /> 
## simple input
#else
	<input type="text" id="$fieldId" name="$labelFor" class="k-textbox" placeholder="${columnVar}" required="$column.isRequired()" validationMessage="Enter {0}" style="width: 200px;" />
##	<p:inputText 
##		size="$primefacesUtils.getDisplayColumns($column)" maxlength="$column.sizeAsInt" 
#end
##	<input type="text" id="$labelFor" name="$labelFor" class="k-textbox" placeholder="${columnVar}" required="$column.isRequired()" validationMessage="Enter {0}" style="width: 200px;" />
##		label="${columnClass}" id="lbl${columnClass}-#{idValue}" value="#{${entityControllerJSFVariable}.${tableVariableName}.${columnVar}}" required="$column.isRequired()"/>
#end
## file upload entry to do
#end
#end
#####	<p:message for="lbl${columnClass}-#{idValue}" />
</li>
#end

#macro (putKendoJsColumnSnippet $tableVariableName $internat)
#set($labelFor=$columnVar)
#set($fieldId="field-$columnVar")
#if($isEnum)
$("#${fieldId}").kendoNumericTextBox();
#if(!$column.isRequired())
#end
#else
#if($columnUtils.isTimeColumn($column))
$("#${fieldId}").kendoDatePicker();
#else
#if($columnUtils.isBoolean($column))
#else
#if($presentationUtils.isTextArea($column))
##	<p:inputTextarea rows="$primefacesUtils.getDisplayRows($column)" cols="$primefacesUtils.getDisplayColumns($column)" maxlength="$column.sizeAsInt" width="$column.sizeAsInt" 
##        counterTemplate="{0} characters remaining." autoResize="false"
#elseif($presentationUtils.isRichText($column))

#else

#end

#end

#end
#end
#end

#macro (putJSFColumnSnippet2)
#putJSFColumnSnippet("selected${tableClassName}" ${tableVariableName})
#end


#macro(putKendoUIMenu)
    $(document).ready(function() {
        $("#${model.name}-Menu").kendoMenu();
    });
#end
#macro(putKendoUIMenuREST)
  $("#${model.name}-Menu").kendoMenu({ 
   dataSource: {
    error: function (e) {
##     if (e.errors !== false) {
##        $("#${tableVariableName}ListFooter").text(e.errors);
##     }
    },
	transport: {
     read: {
      url: "data/model/menu", //package.name (entity,+URL)
      dataType: "json",
      contentType: "application/json; charset=utf-8",
      cache: false
     }
    },
    schema: {
     data: "data",
     total: "total",
     errors: "error"
    },
    columns: [
#foreach ($column in $table.columns)
#putColumnParamNaming()
     {
      template: kendo.template($("#grid-template-$column.alias").html()),
      title: '$column.alias',
#if($isLengthPrecisionColumn)     width:$column.size,#end
      headerAttributes: "$columnVar"
##///format: "{0: dd/MM/yyyy}",  $counter  $velocityCount
##///filterable: false
     }
#if ($velocityCount!=$table.columnCount)
    ,#end 
##set($counter=$counter+1)
#end
     ]
    });
#end

#macro(exposeKendoUITemplate)
#set($templateEntitySearchGridList="KendoUiEntitySearchGrid")
#end

#macro(exposeKendoUIEntitySpecific)
#exposeKendoUITemplate()
#set ($entityFullPath =$commonUtils.getArtifactRelativePathDirAndFullName($table, $templateEntitySearchGridList))
#end

#macro (exposeRestDbApiDomainObject)
#exposeDbApiRestTemplate()
#set ($RESTDbAPIGenericResourceClass = $commonUtils.getTemplateClassName($model, $template, $templateRESTDbApiGenericResource))
#set ($RESTDbAPIGenericResourceImport = $commonUtils.getModelLevelTemplateFullPath($model, $template, $templateRESTDbApiGenericResource))
#end

#macro (exposeDbApiRestTemplate)
#set($templateRESTDbApiGenericResource="RESTDbAPIGenericResource")
#end

