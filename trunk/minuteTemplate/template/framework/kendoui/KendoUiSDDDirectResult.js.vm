#exposeSeparator()
#putImportQuerySDDBean()
#putImportSDDInputBean()
#putImportQuerySDDBean()
#exposeQuerySpecific()
#exposeKendoUIModelSpecific()
#set($table=$inputBean)
#asUML($table)
#set ($inputClass = $commonUtils.getTemplateClassName($inputBean, $model, $templateSDDInputBean))
#set ($tableVariableName = $commonUtils.getJavaNameVariableFirstLetter($inputClass))
#set($tableDB = $inputBean)
#set ($entityControllerJSFClass = $commonUtils.getTemplateClassName($tableDB, $model, $templateEntityControllerJSF))
#set ($entityControllerJSFVariable = $commonUtils.getJavaNameVariableFirstLetter($entityControllerJSFClass))
#exposeVariableEntitySpecific()
#addedAreas()

<script>
        popup = $("#ssd-output-grid-popup").kendoWindow({
            modal: true,
            visible: false,
            resizable: true,
 			iframe: true
        }).data("kendoWindow");
            	
            	
                isQuestionMarkDone = false;
        		var query = "";
#set($cpt=0)
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#set($cpt=$cpt+1)
#putColumnParamNaming()
        		var $columnVar = QueryStoreString.$columnVar;
#if($columnUtils.isTime($column))
                ${columnVar}Date = new Date(${columnVar});
				${columnVar}DateSt = kendo.toString(${columnVar}Date, "yyyy-MM-dd");
#set($columnValue="${columnVar}DateSt")
#else
#set($columnValue=$columnVar)
#end
                if ($columnVar!=undefined && !$columnVar=='') {
                    if (!isQuestionMarkDone) {
                        isQuestionMarkDone = true;
                        query = "?"+"$columnVar="+$columnValue;
                    } else {
                        query = query+"&"+"$columnVar="+$columnValue;
                    }
                }
#end
#end
				var dataSourceUrl = "/data/sdd/${tableClassName}In"+query;

                $("#ssd-output-grid").kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: dataSourceUrl,
                                dataType: "json",
                                contentType: "application/json; charset=utf-8",
                                cache: false
                            }
                        }
                        ,
                        schema: {
                            data: "$sddOutputBeanClass"
                        }
                    },
##                    change: function () {
##						var rowId = this.select().data("uid");
##						var item = this.dataSource.getByUid(rowId);
##						kendo.ui.progress($("#ssd-output-grid"), true);
##						select4Info(item);
##					},
                    resizable: true,
                    sortable: {
                        mode: "single",
                        allowUnsort: false
                    },
                    pageable: {
                        buttonCount: 5
                    },
					columns: [
#foreach($column in $outputBean.columns)
#putColumnParamNaming()
					{
						//TODO hide
	                	field: "$columnVar",
	                	title: "$columnVar",
#updatedColumnAttributeAreas()
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
//						width : toset,
#end
$!updatedAreaEnd
						hidden : false
	            	}
#if ($query.actions.size()>0 || $velocityCount!=$outputBean.columns.size())
                	,#end 
#end
#foreach ($action in $query.actions)
						{ command: { text: "$actionUtils.getActionLabel($action)", click: $actionUtils.getActionMethod($action) }, title: " ", width: "180px" }
#if ($velocityCount!=$query.actions.size()),#end 
#end
	            	],
                    height: 500,
                    scrollable: true,
                    selectable: true

                });

#exposeKendoUISDDActions()

</script>
##exposeKendoUIDetailAction()

