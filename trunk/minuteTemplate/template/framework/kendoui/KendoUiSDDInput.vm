#generatorSpecific()
#exposeSeparator()
#putImportQuerySDDBean()
#putImportSDDInputBean()
#exposeQuerySpecific()
#exposeKendoUIModelSpecific()
#set($table=$inputBean)
#asUML($table)
#set ($inputClass = $commonUtils.getTemplateClassName($inputBean, $model, $templateSDDInputBean))
#set ($tableVariableName = $commonUtils.getJavaNameVariableFirstLetter($inputClass))
#set($tableDB = $inputBean)
#exposeVariableEntitySpecific()
#set($isChart = $queryUtils.isChart($query))
#if($isChart)
#exposeChartSpecific()
#end
#addedAreas()
<!DOCTYPE html>
<html>
<head>
<title></title>

#putKendoUIJSImport()

</head>

<body>
    
<div id="menu"></div>

#putKendoUIHtmlInputSnippet()

            <!-- button action -->
            <p>
                <button id="action" class="k-button" data-bind="click: searchSdd">Execute</button>
            </p>
        </div>
    </div>
</div>


#if ($isChart)
<div id="ssd-output-chart"></div>
<div id="ssd-output-chart-grid"></div>
#end
<div id="ssd-output-grid"></div>

<div id="ssd-output-grid-popup"></div>

<div id="details" />

<!-- kendo js scripts -->
<script>
    $(document).ready(function () {

	  // menu
#putKendoUIMenu()

	  //fields
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#putColumnParams()
#columnJavaNaming()
#putKendoJsColumnSnippet($tableVariableName $tableVariableName)
#end
#end

## inspired by http://demos.telerik.com/kendo-ui/grid/custom-command
#exposeKendoUIDetailWindowTemplate()
		
        popup = $("#ssd-output-grid-popup").kendoWindow({
            modal: true,
            visible: false,
            resizable: true,
 			iframe: true
        }).data("kendoWindow");
            	
#foreach ($column in $table.columns)
#if ($columnUtils.hasCheckConstraint($column))
#putColumnParamNaming()
#set($checkConstraints= $columnUtils.getCheckConstraintValues($column))
#set($size= $checkConstraints.size())
		var ${columnVar}List = [
#foreach ($property in $checkConstraints)
			{
				name : "$property.name",
				value : "$property.name"
			}
#if ($velocityCount!=$size)
            ,#end 
#end
		]
#end
#if($columnUtils.isLink($column))
#set($fieldId="field-$columnVar")
#set($targetQuery = $model.getStatementModel().getQueryById($column.queryParamLink.queryName))
#set($targetUrl = $commonUtils.getArtifactRelativePathDirAndFullName($targetQuery, $template, $templateKendoUiSddDirectResult))
#set ($sddTargetOutputBeanClass = $formatUtils.getJavaName(${targetQuery.getInputBean().getName()}))
        $("#${fieldId}").kendoDropDownList();
		var result${sddTargetOutputBeanClass};
		$.ajax({
            type: 'GET',
			async: false,
            url: "/data/sdd/${sddTargetOutputBeanClass}In",
            dataType: "json",
            success: function(data){
                result${sddTargetOutputBeanClass}= data;
				${sddTargetOutputBeanClass}DDL=data.${sddTargetOutputBeanClass}Out;
            }
        });
//$targetQuery
//        var ${sddTargetOutputBeanClass}DDL = result${sddTargetOutputBeanClass}.${sddTargetOutputBeanClass}Out;
#end
#end

        var viewModel = kendo.observable({
#foreach ($column in $table.columns)
#if ($columnUtils.hasCheckConstraint($column))
#putColumnParamNaming()
			${columnVar}List : ${columnVar}List,
			${columnVar}Selected : null,
#end
#if($columnUtils.isLink($column))
#putColumnParamNaming()
#set($queryTargetDDL = "${columnVar}DDL")
			$queryTargetDDL : ${sddTargetOutputBeanClass}DDL,
#end
#end
            searchSdd: function () {
                isQuestionMarkDone = false;
        		var query = "";

#set($cpt=0)
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#set($cpt=$cpt+1)
#putColumnParamNaming()
#if($columnUtils.isLink($column))
#set($targetQuery = $model.getStatementModel().getQueryById($column.queryParamLink.queryName))
#set($columnText = $queryUtils.getColumnTextVariable($targetQuery))
#set($columnValue = $queryUtils.getColumnValueVariable($targetQuery))
        		var ${columnVar}Selected = this.get("${columnVar}Selected");
        		var ${columnVar} = (${columnVar}Selected==undefined)? undefined: ${columnVar}Selected.$columnText;
#else
        		var $columnVar = this.get("$columnVar");
#end
#if($columnUtils.isTime($column))
                ${columnVar}Date = new Date(${columnVar});
				${columnVar}DateSt = kendo.toString(${columnVar}Date, "yyyy-MM-dd");
#set($columnValue="${columnVar}DateSt")
#else
#set($columnValue=$columnVar)
#end
                if ($columnVar!=undefined && !$columnVar=='') {
                    if (!isQuestionMarkDone) {
                        isQuestionMarkDone = true;
                        query = "?"+"$columnVar="+$columnValue;
                    } else {
                        query = query+"&"+"$columnVar="+$columnValue;
                    }
                }
#end
#end
				var dataSourceUrl = "/data/sdd/${tableClassName}In"+query;

#exposeKendoUISDDDGrid()

            }

        });

#foreach ($field in $query.queryFields)
// is hidden $field.name $field.isHidden() $field.isKey() $field.value
#end
        kendo.bind($("#form-${tableVariableName}"), viewModel);
        
    });
			
#exposeKendoUISDDActions()
#if($isChart)
    function onChartClick(e) {
       e.preventDefault();

       var dataItem = e.dataItem;
       wnd.content(detailsTemplate(dataItem));
       wnd.center().open();
   }
#end

</script>

#exposeKendoUIDetailAction()


</body>
</html>
