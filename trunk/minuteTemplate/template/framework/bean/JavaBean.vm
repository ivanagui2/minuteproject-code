#exposeVariableEntitySpecific()
#addedAreas()
package $packageName;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;

$!updatedAreaImport
/**
 *
 * <p>Title: ${className}</p>
 *
 * <p>Description: Java Bean containing a collection of ${domainClassName} </p>
 *
 */
public class ${className} {

#foreach($column in ${table.columns})
#if (!$column.hasBeenDuplicated())
#putColumnParamNaming()
#if($hasDefaultValue)
#set($defaultConstant = "__DEFAULT_$formatUtils.getUppercaseUnderscore($column.alias)")
    private final $columnType $defaultConstant = $defaultValue;
#end
#end
#end
#foreach($column in ${table.columns})
#if (!$column.hasBeenDuplicated())
#putColumnParamNaming()
    private $columnType $columnVar;
#end
#end

    /**
    * Default constructor
    */
    public ${className}() {
    }
	
#foreach($column in ${table.columns})
//$column.name column.hasBeenDuplicated()= $column.hasBeenDuplicated()
#if (!$column.hasBeenDuplicated())
#putColumnParamNaming()
#if($hasDefaultValue)
#set($defaultConstant = "__DEFAULT_$formatUtils.getUppercaseUnderscore($column.alias)")
    public $columnType get$columnClass() {
        return ($columnVar!=null)?$columnVar:$defaultConstant;
    }
#else
    public $columnType get$columnClass() {
        return $columnVar;
    }
#end
    public void set$columnClass ($columnType $columnVar) {
        this.$columnVar =  $columnVar;
    }

#end
#end

#toString()

$!updatedAreaImplementation
}
