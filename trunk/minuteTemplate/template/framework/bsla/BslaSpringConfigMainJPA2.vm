#exposeVariableModelSpecific()
#exposeArchitectureParams()
#exposeSpringJPAArchitectureParams()
#exposeJPASpecifics()
#exposeSpringTemplate()
#exposeSDDSpringTemplate()
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
						   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

##    <!-- Dao JPA -->
##    <import resource="classpath:${pathDaoJPA}.xml"/>   
    <!-- cache -->
    <cache:annotation-driven cache-manager="cacheManager" />

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcache"/>
    </bean>

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
        <!--<property name="configLocation" value="classpath:ehcache.xml"/>-->
    </bean> 

#exposeModelUpdatedAreas("${JPAFactoryName}")
$!updatedAreaBegin
#if($isUpdated)
$!updatedAreaSnippet
#else
#exposeJPAModelSpecifics()
    <!-- hibernate config to put in an appart config file-->
    <bean id="$JPAFactoryName" autowire="byName"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- all connection information are retrieve from the persistence file-->
		<!--
			<property name="dataSource" ref="..."/>
			<property name="persistenceUnitName" value="..."/>
		-->
		<property name="persistenceUnitName" value="$persistenceUnitName"/>
        <property name="persistenceXmlLocation" value="$persistenceXmlLocation" />
    </bean>
#end
$!updatedAreaEnd

    <!-- dao packages -->
#set($templateSDDSpringJPADao = "SDDSpringJPADao")
#set($daoPackageName=$commonUtils.getPackageName($model, $template, $templateDomainObjectBslaDaoImpl))
#set($daoExtPackageName=$commonUtils.getPackageName($model, $template, $templateDomainObjectBslaDaoExtImpl))
    <context:component-scan base-package="${daoPackageName}"/>
#if ($daoPackageName!=$daoExtPackageName)
    <context:component-scan base-package="${daoExtPackageName}"/>
#end	
#if ($model.statementModel.hasQueries())
#set($sddDaoPackageName=$commonUtils.getPackageName($model, $template, $templateSDDRepositoryInterface))
    <context:component-scan base-package="${sddDaoPackageName}"/>
#end
#if ($model.statementModel.hasComposites())
#set($sddDaoPackageName=$commonUtils.getPackageName($model, $template, $templateSDDCompositeRepository))
    <context:component-scan base-package="${sddDaoPackageName}"/>
#end
    <!-- Database -->
    <import resource="classpath:${databaseConfig}.xml"/>    

</beans>

