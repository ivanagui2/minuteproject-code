    protected String getUpdateNotNullOnly${tableClassName}QueryChunkPrototype ($tableClassName $tableVariableName) {
        boolean isSetSet = false;
        StringBuffer query = new StringBuffer();
        query.append (" update $tableClassName $tableVariableName ");
#foreach ($column in ${table.columns})
#if (!$column.isPrimaryKey())
#putColumnParamNaming()
        if (${tableVariableName}.get$columnClass() != null) {
           query.append (getQueryCommaSet (isSetSet));
           isSetSet = true; 
           query.append(" ${tableVariableName}.${columnVar} = :${columnVar}");
        }
#end    
#end
        if (isSetSet==false)
			throw new IllegalArgumentException("$tableVariableName mask should contain updatable fields");
        return query.toString();
    }
    
    protected String getUpdateNotNullOnly${tableClassName}QueryChunk ($tableClassName $tableVariableName) {
        boolean isWhereSet = false;
        StringBuffer query = new StringBuffer(getUpdateNotNullOnly${tableClassName}QueryChunkPrototype($tableVariableName));
#foreach ($column in $table.primaryKeyColumns)
#if($columnUtils.isColumnEmbeddedInEntity($column))
#putColumnParamNaming()
        if (${tableVariableName}.get$columnClass() != null) {
           query.append (getQueryWHERE_AND (isWhereSet));
           isWhereSet = true;
			     query.append(" ${tableVariableName}.${columnVar} = :${columnVar}");
        }
#end
#end
        if (isWhereSet==false)
			throw new IllegalArgumentException("$tableVariableName mask should contain primary key");
        return query.toString();
    }
    
