#macro(setJsfMenu4Package)
#set($displayableEntities = $presentationUtils.getDisplayableEntityFromPackage($package))
#set($displayableEntityGroups = $presentationUtils.getDisplayableEntityGroups($package))
#set($packageLabel=$i18nUtils.getPackageName($package))
#set($subMenuVar = "submenu${package.name}")
#if(!$displayableEntities.isEmpty())
        DefaultSubMenu ${subMenuVar} = new DefaultSubMenu();  
        ${subMenuVar}.setLabel("${packageLabel}"); 	
		
#if($entitySecurityUtils.isEntityRoleSecured($package))
#set($roles=$entitySecurityUtils.getEntitySecuredRoles($package))
## <mp:isUserInRole role="${roles}"> if(!tx.isCallerInRole ("${roles}")
#end
#foreach ($groups in $displayableEntityGroups)	
#foreach ($table in ${groups})
#exposeJSFEntitySpecific()
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
        DefaultMenuItem item${domainClassName} = new DefaultMenuItem();  
        item${domainClassName}.setValue("$tableLabel");  
        item${domainClassName}.setUrl("/${entityListLazyJSFLocation}"); 
        ${subMenuVar}.addElement(item${domainClassName}); 
		
#end
#end
        model.addElement(${subMenuVar});
#end	
#end
#exposeJSFModelSpecific()
##exposeJSFEntitySpecific()
#set ($applicationJSF=$configuration.name) 
#set ($applicationLabel=$formatUtils.getJavaName($applicationJSF))
package $packageName;

#if($isSpringBackend)
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
#elseif($isEJBBackend)
import javax.enterprise.context.RequestScoped;
import javax.enterprise.inject.Default;
import javax.inject.Inject;
import javax.inject.Named;
#end
#*
import org.primefaces.model.*;
import org.primefaces.component.menuitem.*;
import org.primefaces.component.submenu.Submenu;
*#
import org.primefaces.model.menu.DefaultSubMenu;
import org.primefaces.model.menu.DefaultMenuModel;
import org.primefaces.model.menu.DefaultMenuItem;
import org.primefaces.model.menu.MenuModel;

#if($isSpringBackend)
@Service ("${modelBeanManagerMenuJSFVariable}")
@Transactional
#elseif($isEJBBackend)
@Named(value = "$modelBeanManagerMenuJSFVariable")
@Default
@RequestScoped
#end
public class ${className} {

    private MenuModel model;  
  
    public ${className}() {  
        model = new DefaultMenuModel();  
          
#foreach ($package in ${businessPackages})
#setJsfMenu4Package($package)
#end

#foreach ($package in ${businessPackageViews})
#setJsfMenu4Package($package)
#end

#if($model.hasStatementModel())
	
	    // SDD
        DefaultSubMenu sdd = new DefaultSubMenu();  
        sdd.setLabel("SDD");
        model.addElement(sdd);
#foreach ($query in $model.getStatementModel().getQueries().getQueries()) 
#exposeQuerySpecific()
#exposeChartSpecific()
#set($table=$query.inputBean)
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
#set($domainClassName=$commonUtils.getJavaClassName($table))
        DefaultMenuItem item${domainClassName} = new DefaultMenuItem();  
        item${domainClassName}.setValue("$tableLabel");
#if (!$isChartLayout)
#set($sddJSFLocation=$commonUtils.getArtifactRelativePathDirAndFullName($table, $template, $templateSDDJSF))
#else
#set($sddJSFLocation=$commonUtils.getArtifactRelativePathDirAndFullName($table, $template, $templateChartJSF))
#end
        item${domainClassName}.setUrl("/${sddJSFLocation}");
        sdd.addElement(item${domainClassName}); 
        
#end
#end
    }  
      
    public MenuModel getModel() {  
        return model;  
    }     
}  