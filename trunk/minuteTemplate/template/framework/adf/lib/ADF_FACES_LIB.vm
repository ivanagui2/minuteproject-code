#macro (exposeADFFacesCommon)
#set($separator=$i18nUtils.getSeparator($template))
#end

#macro (adfEntityColumnDisplay $id)
#if($columnUtils.hasCheckConstraint($column))
                        <af:selectOneChoice label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}" 
							value="#{viewScope.${entityADFVariable}BackingBean.search${entityADFVariable}.${columnVar}}"
							id="${id}"
							shortDesc="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}">
                          <f:selectItems value="#{viewScope.${entityADFVariable}BackingBean.${entityADFVariable}.${columnVar}Enum}" id="${id}Items"/>
                        </af:selectOneChoice>
#else
                        <af:inputText label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}"
                                      id="${id}" ##columns="40" ##columns="$column.size"
#adfBackingBean("viewScope", "${entityADFVariable}BackingBean", "search${entityADFVariable}")
                        />
#end
#end

#macro (adfEntityEditColumnDisplay $id)
#adfEntityEditColumnDisplayWithScope($id, "${entityADFVariable}BackingBean", "viewScope")
#end

#macro (adfEntityEditColumnDisplay4PageFlow $id)
#adfEntityEditColumnDisplayWithScope($id, "${viewEditEntityBeanVariable}", "pageFlowScope")
#end

#macro (adfEntityEditColumnDisplayWithScope $id $bean $scope)
#if($isPrimaryKey && !$columnUtils.isNaturalPk($column))
	
##elseif($columnUtils.isForeignKey($column) && )
#else
#if($presentationUtils.isParentDropDownList($column) )
                        <af:selectOneChoice label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}" 
							value="#{${scope}.${bean}.${entityADFVariable}.${columnVar}_}"
							id="${id}" required="$isMandatory"
							shortDesc="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}">
                          <f:selectItems value="#{${scope}.${bean}.${columnVar}List}" id="${id}Items"/>
                        </af:selectOneChoice>	
#elseif($columnUtils.hasCheckConstraint($column))
                        <af:selectOneChoice label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}" 
							value="#{${scope}.${bean}.${entityADFVariable}.${columnVar}}"
							id="${id}" required="$isMandatory"
							shortDesc="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}">
                          <f:selectItems value="#{${scope}.${bean}.${entityADFVariable}.${columnVar}Enum}" id="${id}Items"/>
                        </af:selectOneChoice>
#elseif($presentationUtils.isCheckBox($column))
                        <af:selectBooleanCheckbox label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}"
                            value="#{${scope}.${bean}.${entityADFVariable}.${columnVar}}"
                            id="$id" shortDesc="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}"/>	
#elseif ($presentationUtils.isRichTextOnly($column))
                        <af:richTextEditor label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}" id="$id"/>	
#elseif($presentationUtils.isFileUpload($column))
##TODO	
#else
#if ($columnUtils.isTimeColumn($column))
                        <af:inputDate
#else
                        <af:inputText
#end
                            label="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}"
                            id="${id}" 
#if (!$columnUtils.isTimeColumn($column))
##                            columns="$adfUtils.getPrecision($column)"
                            columns="$adfUtils.getDisplayColumns($column)"
                            rows="$adfUtils.getDisplayRows($column)"
#else
                            columns="10"
#end
                            required="$isMandatory"
#adfBackingBean($scope, $bean, ${entityADFVariable})
                            shortDesc="#{viewcontrollerBundle['$tableVariableName$separator$columnVar']}"
                        />
#end
#end
#end

#macro(adfBackingBean $scope $bean $variable)
#if($isForeignKey)
                            value="#{${scope}.${bean}.${variable}.${columnVar}_}"
#else
                            value="#{${scope}.${bean}.${variable}.${columnVar}}"
#end
#end
#############
############# macro direct binding
#############
#macro (adfEntityEditColumnDisplayForBindings $id)
#if ($columnUtils.isTimeColumn($column))
                                            <af:inputDate value="#{bindings.${columnClass}.inputValue}"
                                                          label="#{bindings.${columnClass}.hints.label}"
                                                          required="#{bindings.${columnClass}.hints.mandatory}"
                                                          columns="#{bindings.${columnClass}.hints.displayWidth}"
                                                          shortDesc="#{bindings.${columnClass}.hints.tooltip}" id="$id">
                                                <f:validator binding="#{bindings.${columnClass}.validator}"/>
                                                <af:convertDateTime pattern="#{bindings.${columnClass}.format}"/>
                                            </af:inputDate>
#else
                                            <af:inputText value="#{bindings.${columnClass}.inputValue}"
                                                          label="#{bindings.${columnClass}.hints.label}"
                                                          required="#{bindings.${columnClass}.hints.mandatory}"
                                                          columns="#{bindings.${columnClass}.hints.displayWidth}"
                                                          maximumLength="#{bindings.${columnClass}.hints.precision}"
                                                          shortDesc="#{bindings.${columnClass}.hints.tooltip}" id="$id">
                                                <f:validator binding="#{bindings.${columnClass}.validator}"/>
                                            </af:inputText>
#end
#end
