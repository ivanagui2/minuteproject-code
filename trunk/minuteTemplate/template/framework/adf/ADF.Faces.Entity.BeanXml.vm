#exposeADFFacesEntitySpecific()
#addedAreas()
#set($thisClassName=$className)
#set($thisPackageName=$packageName)
<?xml version="1.0" encoding="UTF-8" ?>
<JavaBean xmlns="http://xmlns.oracle.com/adfm/beanmodel" version="11.1.1.61.92"
          id="$thisClassName" Package="$thisPackageName"
          BeanClass="$beanVOADFFacesImport" isJavaBased="true">
#foreach($column in ${table.primaryKeyColumns})
#putColumnParamNaming()
  <Attribute Name="$columnVar" Type="$columnFullType"/>
##    private $columnType $columnVar;
#end

#foreach ($column in ${table.attributes})
#fieldAnnotationAddedAreas()
#updatedColumnAttributeAreas()
$!updatedAreaBegin
#if($isUpdated)
$updatedAreaSnippet
#else
#putColumnParamNaming()
#if ($column.isLob())
#exposeLobProperties()
#end
#if($isEnum)
#set($columnType=$enumClassName)
#end
#if($isTimeColumn)
#set($columnFullType="java.util.Date")
#end
  <Attribute Name="$columnVar" Type="$columnFullType"/>
##    private $columnType $columnVar; 
#end
$!updatedAreaEnd

#end

#foreach ($reference in $table.parents)
#if(!$referenceUtils.isReferenceInPrimaryKey($reference))
#putReferenceParams2()
#exposeADFFacesDomainObject($reference.foreignTable)
#set($colVar = $commonUtils.getColumnAliasVariable($table, $reference))
  <AccessorAttribute id="${colVar}" IsCollection="false"
                     BeanClass="$importDomainObjectUML"
                     CollectionBeanClass="UpdateableSingleValue"/>
#set($column = $reference.localColumn)
#putColumnParamNaming()
  <Attribute Name="${colVar}_" Type="$columnFullType"/>
#end	
#end	

#foreach ($reference in $table.children)
#putReferenceParams2()
#exposeEntityUpdatedAreas("${childrenListVariable}-field")
#if(!$linktableDB.isManyToMany())
$!updatedAreaBegin
#if($isUpdated)
$!updatedAreaSnippet
#else
#set ($importDomainObjectForeignTable = $commonUtils.getEntityLevelTemplateFullPath($model, $linktableDB, $template, $templateJPA2DomainObject))
#set ($targetEntityClass="${importDomainObjectForeignTable}.class")
#exposeEnrichedPk(${reference.column})
#if (!$isEnrichedPk)
#set ($foreignColumnVar = $formatUtils.getJavaNameVariable($columnDB.name))
#else
#set ($foreignColumnVar = $domainVariableName)
#end
#exposeADFFacesDomainObject($reference.foreignTable)
##    private Set <$linkedTableClass> $childrenListVariable = new HashSet<$linkedTableClass>(); 
  <AccessorAttribute id="$childrenListVariable" IsCollection="true"
                     BeanClass="$importDomainObjectUML"
                     CollectionBeanClass="UpdateableCollection"/>
#end
#end
#if(!$linktableDB.isManyToMany())
$!updatedAreaEnd
#end
#end
<!-- m2m -->
#if($isM2MEnable)
#foreach ($linkReference in $enrichmentUtils.getLinkedTargetReferenceByMany2Many($table))
#exposeM2MSpecific()
#exposeEntityUpdatedAreas("m2m-$childrenListVariable")
$!updatedAreaBegin
#if($isUpdated)
$!updatedAreaSnippet
#else
#exposeImportParamsUML($targetTable)
#set($targetColumn=$enrichmentUtils.getOtherColumn($linkedTableDB, $linkReference.localColumn))
<!--  <AccessorAttribute id="$childrenListVariable" IsCollection="true"
                     BeanClass="$importDomainObjectUML"
                     CollectionBeanClass="UpdateableCollection"/> -->
##    private Set <$targetTableName> $childrenListVariable = new HashSet <$targetTableName> ();
##
#end
#updatedAreaEnd()
#end
#end

<!-- adder -->
#foreach ($reference in $table.children)
#putReferenceParams2()
#exposeEntityUpdatedAreas("${childrenListVariable}-getter")
$!updatedAreaBegin
#if($isUpdated)
$!updatedAreaSnippet
#else
#if(!$linktableDB.isManyToMany())
#exposeADFFacesDomainObject($reference.foreignTable)
  <MethodAccessor IsCollection="false" Type="void" id="add${childrenListClass}"
                  ReturnNodeName="Return">
    <ParameterInfo id="${linkedTableVariable}" Type="$importDomainObjectUML"
                   isStructured="true"/>
  </MethodAccessor>
#end    
#end
$!updatedAreaEnd
#end

  <ConstructorMethod IsCollection="true"
                     Type="$beanVOADFFacesImport"
                     BeanClass="$beanVOADFFacesImport" id="$thisClassName"/>

$!updatedAreaImplementation
</JavaBean>
