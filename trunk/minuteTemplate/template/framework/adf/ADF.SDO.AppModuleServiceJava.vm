package my.hw.view.common.serviceinterface;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import my.hw.view.common.PersonsViewSDO;

import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.common.service.types.ProcessData;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
import oracle.webservices.annotations.async.AsyncWebService;
import oracle.webservices.annotations.async.CallbackMethod;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 06 11:15:16 CEST 2012
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace="/my/hw/view/common/", name="AppModuleService",
    wsdlLocation="my/hw/view/common/serviceinterface/AppModuleService.wsdl")
@SDODatabinding(schemaLocation="my/hw/view/common/serviceinterface/AppModuleService.xsd")
@AsyncWebService
public interface AppModuleService {
    public static final String NAME = "{/my/hw/view/common/}AppModuleService";

    @WebMethod(action="/my/hw/view/common/getPersonsView1", operationName="getPersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="getPersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="getPersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    PersonsViewSDO getPersonsView1(@WebParam(mode = WebParam.Mode.IN, name="personId")
        Long personId) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/updatePersonsView1", operationName="updatePersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="updatePersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="updatePersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    PersonsViewSDO updatePersonsView1(@WebParam(mode = WebParam.Mode.IN, name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/deletePersonsView1", operationName="deletePersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="deletePersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="deletePersonsView1Response")
    @CallbackMethod(exclude=true)
    void deletePersonsView1(@WebParam(mode = WebParam.Mode.IN, name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/mergePersonsView1", operationName="mergePersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="mergePersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="mergePersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    PersonsViewSDO mergePersonsView1(@WebParam(mode = WebParam.Mode.IN, name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/findPersonsView1", operationName="findPersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="findPersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="findPersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    List<PersonsViewSDO> findPersonsView1(@WebParam(mode = WebParam.Mode.IN,
            name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/processPersonsView1", operationName="processPersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="processPersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="processPersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    List<PersonsViewSDO> processPersonsView1(@WebParam(mode = WebParam.Mode.IN,
            name="changeOperation")
        String changeOperation, @WebParam(mode = WebParam.Mode.IN, name="personsView1")
        List<PersonsViewSDO> personsView1, @WebParam(mode = WebParam.Mode.IN,
            name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/processCSPersonsView1",
        operationName="processCSPersonsView1")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="processCSPersonsView1")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="processCSPersonsView1Response")
    @WebResult(name="result")
    @CallbackMethod(exclude=true)
    ProcessData processCSPersonsView1(@WebParam(mode = WebParam.Mode.IN, name="processData")
        ProcessData processData, @WebParam(mode = WebParam.Mode.IN, name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/deletePersonsView1Async",
        operationName="deletePersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="deletePersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="deletePersonsView1AsyncResponse")
    @Action(input="/my/hw/view/common/deletePersonsView1Async", output="/my/hw/view/common/deletePersonsView1AsyncResponse")
    void deletePersonsView1Async(@WebParam(mode = WebParam.Mode.IN, name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/mergePersonsView1Async",
        operationName="mergePersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="mergePersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="mergePersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/mergePersonsView1Async", output="/my/hw/view/common/mergePersonsView1AsyncResponse")
    PersonsViewSDO mergePersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/findPersonsView1Async",
        operationName="findPersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="findPersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="findPersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/findPersonsView1Async", output="/my/hw/view/common/findPersonsView1AsyncResponse")
    List<PersonsViewSDO> findPersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/getPersonsView1Async",
        operationName="getPersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="getPersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="getPersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/getPersonsView1Async", output="/my/hw/view/common/getPersonsView1AsyncResponse")
    PersonsViewSDO getPersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="personId")
        Long personId) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/processCSPersonsView1Async",
        operationName="processCSPersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="processCSPersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="processCSPersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/processCSPersonsView1Async", output="/my/hw/view/common/processCSPersonsView1AsyncResponse")
    ProcessData processCSPersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="processData")
        ProcessData processData, @WebParam(mode = WebParam.Mode.IN, name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/processPersonsView1Async",
        operationName="processPersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="processPersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="processPersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/processPersonsView1Async", output="/my/hw/view/common/processPersonsView1AsyncResponse")
    List<PersonsViewSDO> processPersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="changeOperation")
        String changeOperation, @WebParam(mode = WebParam.Mode.IN, name="personsView1")
        List<PersonsViewSDO> personsView1, @WebParam(mode = WebParam.Mode.IN,
            name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/my/hw/view/common/updatePersonsView1Async",
        operationName="updatePersonsView1Async")
    @RequestWrapper(targetNamespace="/my/hw/view/common/types/", localName="updatePersonsView1Async")
    @ResponseWrapper(targetNamespace="/my/hw/view/common/types/", localName="updatePersonsView1AsyncResponse")
    @WebResult(name="result")
    @Action(input="/my/hw/view/common/updatePersonsView1Async", output="/my/hw/view/common/updatePersonsView1AsyncResponse")
    PersonsViewSDO updatePersonsView1Async(@WebParam(mode = WebParam.Mode.IN,
            name="personsView1")
        PersonsViewSDO personsView1) throws ServiceException;
}
