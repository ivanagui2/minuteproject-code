/**
 * This class is generated by jOOQ
 */
package my.jooq.mp.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.2"},
                            comments = "This class is generated by jOOQ")
public class Address extends org.jooq.impl.UpdatableTableImpl<my.jooq.mp.tables.records.AddressRecord> {

	private static final long serialVersionUID = -1848045083;

	/**
	 * The singleton instance of address
	 */
	public static final my.jooq.mp.tables.Address ADDRESS = new my.jooq.mp.tables.Address();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<my.jooq.mp.tables.records.AddressRecord> __RECORD_TYPE = my.jooq.mp.tables.records.AddressRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<my.jooq.mp.tables.records.AddressRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public final org.jooq.TableField<my.jooq.mp.tables.records.AddressRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<my.jooq.mp.tables.records.AddressRecord, java.lang.String> STREET1 = createField("street1", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<my.jooq.mp.tables.records.AddressRecord, java.lang.String> STREET2 = createField("street2", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [conference.address.country_id]
	 * REFERENCES country [conference.country.id]
	 * </pre></code>
	 */
	public final org.jooq.TableField<my.jooq.mp.tables.records.AddressRecord, java.lang.Integer> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * No further instances allowed
	 */
	private Address() {
		super("address", my.jooq.mp.Conference.CONFERENCE);
	}

	/**
	 * No further instances allowed
	 */
	private Address(java.lang.String alias) {
		super(alias, my.jooq.mp.Conference.CONFERENCE, my.jooq.mp.tables.Address.ADDRESS);
	}

	@Override
	public org.jooq.Identity<my.jooq.mp.tables.records.AddressRecord, java.lang.Long> getIdentity() {
		return my.jooq.mp.Keys.IDENTITY_address;
	}

	@Override
	public org.jooq.UniqueKey<my.jooq.mp.tables.records.AddressRecord> getMainKey() {
		return my.jooq.mp.Keys.KEY_address_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<my.jooq.mp.tables.records.AddressRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<my.jooq.mp.tables.records.AddressRecord>>asList(my.jooq.mp.Keys.KEY_address_PRIMARY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<my.jooq.mp.tables.records.AddressRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<my.jooq.mp.tables.records.AddressRecord, ?>>asList(my.jooq.mp.Keys.fk_address_country1);
	}

	@Override
	public my.jooq.mp.tables.Address as(java.lang.String alias) {
		return new my.jooq.mp.tables.Address(alias);
	}
}
