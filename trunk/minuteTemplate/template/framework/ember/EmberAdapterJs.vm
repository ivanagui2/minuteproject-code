#exposeVariableModelSpecific()
import DS from 'ember-data';
import {fetchData} from '../utils/common-utils';
import BaseAdapter from './BaseAdapter';
import appendQuery from 'npm:append-query';##TODO change dependent of ember version > octane => import appendQuery from 'append-query'

import config from '../config/environment';
const { host, namespace } = config.DS${className};
const baseUrl = host+"/"+namespace;

export default BaseAdapter.extend({

#foreach ($package in $model.getStatementModel().getSddPackage().getQueryPackages())
//$package.name
#foreach ($query in $package.getQueries())
#exposeQuerySpecific()
#set($table=$query.inputBean)
#exposeVariableEntitySpecific()
#putImportSDDInputBean()

/* connector to $domainClassName info */
    ${tableVariableName} : function(params) {
        return fetchData(baseUrl+'/data/sdd/${sddInputBeanClass}'+filter${domainClassName}(params));
    },
#end
#end 
    
});


#foreach ($package in $model.getStatementModel().getSddPackage().getQueryPackages())
//$package.name
#foreach ($query in $package.getQueries())
#exposeQuerySpecific()
#set($table=$query.inputBean)
#set($tableLabel=$i18nUtils.getI18nFromDBObject($table))
#set($accessUrl=$kendoUIUtils.getAccessUrl($table.name))
#exposeVariableEntitySpecific()

/* filter for $domainClassName entity */
function filter${domainClassName} (filter) {
	if (filter) {
		return appendQuery("",{
#foreach($column in $inputBean.columns)
#if (!$column.hasBeenDuplicated())
#putColumnParamNaming()
				"$columnVar":filter.$columnVar #if($velocityCount!=$size),
#end
#end
#end
				}, 
				{ removeNull: true }
			);
	}
	return "";
}			
#end
#end 
